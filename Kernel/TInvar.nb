(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* Created By: SaveReadableNotebook *)
(* https://resources.wolframcloud.com/FunctionRepository/resources/SaveReadableNotebook *)

Notebook[
{
Cell[
CellGroupData[
{
Cell["TInvar package", "Title"],
Cell[
"Canonicalization of expressions involving the Riemann tensor",
"Subtitle"
],
Cell[
TextData[
{
StyleBox["Authors:", FontWeight -> "Bold"],
"\nKevin Kiely <kevin.kiely@ucdconnect.ie>\nBarry Wardell <barry.wardell@ucd.ie>\nAdrian Ottewill <adrian.ottewill@ucd.ie>\n",
StyleBox[
"University College Dublin, Ireland",
FontSlant -> "Italic"
],
"\n\nJos\[EAcute] M. Mart\[IAcute]n-Garc\[IAcute]a < jose@xact.es>\n",
StyleBox["Wolfram Research\n\n", FontSlant -> "Italic"],
"\[Copyright] 2023\n\nhttp://www.xact.es"
}
],
"Text"
],
Cell[
CellGroupData[
{
Cell[
BoxData[RowBox[{" ", RowBox[{"<<", "xAct`xTensor`"}]}]],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
"\"------------------------------------------------------------\""
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"Package xAct`xPerm`  version \"",
"\[InvisibleSpace]",
"\"1.2.3\"",
"\[InvisibleSpace]",
"\", \"",
"\[InvisibleSpace]",
RowBox[{"{", RowBox[{"2015", ",", "8", ",", "23"}], "}"}]
}
],
"Package xAct`xPerm`  version ""1.2.3"", "{2015, 8, 23},
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
"\"CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the General Public License.\""
],
"Print"
],
Cell[
BoxData["\"Connecting to external mac executable...\""],
"Print"
],
Cell[BoxData["\"Connection established.\""], "Print"],
Cell[
BoxData[
"\"------------------------------------------------------------\""
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"Package xAct`xTensor`  version \"",
"\[InvisibleSpace]",
"\"1.1.4\"",
"\[InvisibleSpace]",
"\", \"",
"\[InvisibleSpace]",
RowBox[{"{", RowBox[{"2020", ",", "2", ",", "16"}], "}"}]
}
],
"Package xAct`xTensor`  version ""1.1.4"", "{2020, 2, 16},
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
"\"CopyRight (C) 2002-2020, Jose M. Martin-Garcia, under the General Public License.\""
],
"Print"
],
Cell[
BoxData[
"\"------------------------------------------------------------\""
],
"Print"
],
Cell[
BoxData[
"\"These packages come with ABSOLUTELY NO WARRANTY; for details type Disclaimer[]. This is free software, and you are welcome to redistribute it under certain conditions. See the General Public License for details.\""
],
"Print"
],
Cell[
BoxData[
"\"------------------------------------------------------------\""
],
"Print"
]
},
Open
]
]
},
Open
]
],
Cell[
CellGroupData[
{
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
"ReportSet",
"[",
RowBox[{"$CovDFormat", ",", "\"Postfix\""}],
"]"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"ReportSet",
"[",
RowBox[{"$PrePrint", ",", "ScreenDollarIndices"}],
"]"
}
],
";"
}
]
}
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** Variable \"",
"\[InvisibleSpace]",
"$CovDFormat",
"\[InvisibleSpace]",
"\" changed from \"",
"\[InvisibleSpace]",
"\"Prefix\"",
"\[InvisibleSpace]",
"\" to \"",
"\[InvisibleSpace]",
"\"Postfix\""
}
],
SequenceForm[
"** Variable ",
xAct`xTensor`$CovDFormat,
" changed from ",
"Prefix",
" to ",
"Postfix"
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** Variable \"",
"\[InvisibleSpace]",
"$PrePrint",
"\[InvisibleSpace]",
"\" assigned value \"",
"\[InvisibleSpace]",
"ScreenDollarIndices"
}
],
SequenceForm[
"** Variable ",
$PrePrint,
" assigned value ",
xAct`xTensor`ScreenDollarIndices
],
Editable -> False
]
],
"Print"
]
},
Open
]
]
},
Open
]
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
RowBox[
{
"ReportSetOption",
"[",
RowBox[
{
"ContractMetric",
",",
RowBox[{"AllowUpperDerivatives", "\[Rule]", "True"}]
}
],
"]"
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** Option \"",
"\[InvisibleSpace]",
"AllowUpperDerivatives",
"\[InvisibleSpace]",
"\" of \"",
"\[InvisibleSpace]",
"ContractMetric",
"\[InvisibleSpace]",
"\" changed from \"",
"\[InvisibleSpace]",
"False",
"\[InvisibleSpace]",
"\" to \"",
"\[InvisibleSpace]",
"True"
}
],
SequenceForm[
"** Option ",
xAct`xTensor`AllowUpperDerivatives,
" of ",
xAct`xTensor`ContractMetric,
" changed from ",
False,
" to ",
True
],
Editable -> False
]
],
"Print"
]
},
Open
]
],
Cell[
BoxData[
RowBox[
{
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"FreeIndices",
" ",
"=",
" ",
RowBox[
{"IndexRange", "[", RowBox[{"a", ",", " ", "z"}], "]"}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
"SigmaIndices",
" ",
"=",
" ",
RowBox[
{
"RotateLeft",
"[",
RowBox[
{
"IndexRange",
"[",
RowBox[{"\[Alpha]", ",", " ", "\[Nu]"}],
"]"
}
],
"]"
}
]
}
],
";"
}
],
" "
}
]
}
]
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
RowBox[
{
"DefManifold",
"[",
RowBox[{"M", ",", " ", "4", ",", " ", "FreeIndices"}],
"]"
}
],
";"
}
]
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefManifold",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"manifold \"",
"\[InvisibleSpace]",
"M",
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefManifold,
": Defining ",
"manifold ",
M,
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefVBundle",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"vbundle \"",
"\[InvisibleSpace]",
"TangentM",
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefVBundle,
": Defining ",
"vbundle ",
TangentM,
". ",
""
],
Editable -> False
]
],
"Print"
]
},
Open
]
]
},
Open
]
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
RowBox[
{
"DefMetric",
"[",
RowBox[
{
RowBox[{"-", "1"}],
",",
" ",
RowBox[
{
"metric",
"[",
RowBox[{RowBox[{"-", "a"}], ",", " ", RowBox[{"-", "b"}]}],
"]"
}
],
",",
" ",
"CD",
",",
" ",
RowBox[
{"{", RowBox[{"\";\"", ",", " ", "\"\[Del]\""}], "}"}
],
",",
" ",
RowBox[{"CurvatureRelations", " ", "->", " ", "False"}]
}
],
"]"
}
],
";"
}
]
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefTensor",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"symmetric metric tensor \"",
"\[InvisibleSpace]",
RowBox[
{
"metric",
"[",
RowBox[{RowBox[{"-", "a"}], ",", RowBox[{"-", "b"}]}],
"]"
}
],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefTensor,
": Defining ",
"symmetric metric tensor ",
metric[-a, -b],
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefTensor",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"antisymmetric tensor \"",
"\[InvisibleSpace]",
RowBox[
{
"epsilonmetric",
"[",
RowBox[
{
RowBox[{"-", "a"}],
",",
RowBox[{"-", "b"}],
",",
RowBox[{"-", "c"}],
",",
RowBox[{"-", "d"}]
}
],
"]"
}
],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefTensor,
": Defining ",
"antisymmetric tensor ",
epsilonmetric[-a, -b, -c, -d],
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefTensor",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"tetrametric \"",
"\[InvisibleSpace]",
RowBox[
{
"Tetrametric",
"[",
RowBox[
{
RowBox[{"-", "a"}],
",",
RowBox[{"-", "b"}],
",",
RowBox[{"-", "c"}],
",",
RowBox[{"-", "d"}]
}
],
"]"
}
],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefTensor,
": Defining ",
"tetrametric ",
Tetrametric[-a, -b, -c, -d],
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefTensor",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"tetrametric \"",
"\[InvisibleSpace]",
RowBox[
{
"Tetrametric\[Dagger]",
"[",
RowBox[
{
RowBox[{"-", "a"}],
",",
RowBox[{"-", "b"}],
",",
RowBox[{"-", "c"}],
",",
RowBox[{"-", "d"}]
}
],
"]"
}
],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefTensor,
": Defining ",
"tetrametric ",
Tetrametric\[Dagger][-a, -b, -c, -d],
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefCovD",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"covariant derivative \"",
"\[InvisibleSpace]",
RowBox[{"CD", "[", RowBox[{"-", "a"}], "]"}],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefCovD,
": Defining ",
"covariant derivative ",
CD[-a],
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefTensor",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"vanishing torsion tensor \"",
"\[InvisibleSpace]",
RowBox[
{
"TorsionCD",
"[",
RowBox[
{"a", ",", RowBox[{"-", "b"}], ",", RowBox[{"-", "c"}]}
],
"]"
}
],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefTensor,
": Defining ",
"vanishing torsion tensor ",
TorsionCD[a, -b, -c],
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefTensor",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"symmetric Christoffel tensor \"",
"\[InvisibleSpace]",
RowBox[
{
"ChristoffelCD",
"[",
RowBox[
{"a", ",", RowBox[{"-", "b"}], ",", RowBox[{"-", "c"}]}
],
"]"
}
],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefTensor,
": Defining ",
"symmetric Christoffel tensor ",
ChristoffelCD[a, -b, -c],
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefTensor",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"Riemann tensor \"",
"\[InvisibleSpace]",
RowBox[
{
"RiemannCD",
"[",
RowBox[
{
RowBox[{"-", "a"}],
",",
RowBox[{"-", "b"}],
",",
RowBox[{"-", "c"}],
",",
RowBox[{"-", "d"}]
}
],
"]"
}
],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefTensor,
": Defining ",
"Riemann tensor ",
RiemannCD[-a, -b, -c, -d],
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefTensor",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"symmetric Ricci tensor \"",
"\[InvisibleSpace]",
RowBox[
{
"RicciCD",
"[",
RowBox[{RowBox[{"-", "a"}], ",", RowBox[{"-", "b"}]}],
"]"
}
],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefTensor,
": Defining ",
"symmetric Ricci tensor ",
RicciCD[-a, -b],
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefTensor",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"Ricci scalar \"",
"\[InvisibleSpace]",
RowBox[{"RicciScalarCD", "[", "]"}],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefTensor,
": Defining ",
"Ricci scalar ",
RicciScalarCD[],
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefTensor",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"symmetric Einstein tensor \"",
"\[InvisibleSpace]",
RowBox[
{
"EinsteinCD",
"[",
RowBox[{RowBox[{"-", "a"}], ",", RowBox[{"-", "b"}]}],
"]"
}
],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefTensor,
": Defining ",
"symmetric Einstein tensor ",
EinsteinCD[-a, -b],
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefTensor",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"Weyl tensor \"",
"\[InvisibleSpace]",
RowBox[
{
"WeylCD",
"[",
RowBox[
{
RowBox[{"-", "a"}],
",",
RowBox[{"-", "b"}],
",",
RowBox[{"-", "c"}],
",",
RowBox[{"-", "d"}]
}
],
"]"
}
],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefTensor,
": Defining ",
"Weyl tensor ",
WeylCD[-a, -b, -c, -d],
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefTensor",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"symmetric TFRicci tensor \"",
"\[InvisibleSpace]",
RowBox[
{
"TFRicciCD",
"[",
RowBox[{RowBox[{"-", "a"}], ",", RowBox[{"-", "b"}]}],
"]"
}
],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefTensor,
": Defining ",
"symmetric TFRicci tensor ",
TFRicciCD[-a, -b],
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefTensor",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"Kretschmann scalar \"",
"\[InvisibleSpace]",
RowBox[{"KretschmannCD", "[", "]"}],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefTensor,
": Defining ",
"Kretschmann scalar ",
KretschmannCD[],
". ",
""
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** DefCovD:  Computing RiemannToWeylRules for dim \"",
"\[InvisibleSpace]",
"4"
}
],
"** DefCovD:  Computing RiemannToWeylRules for dim "4,
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** DefCovD:  Computing RicciToTFRicci for dim \"",
"\[InvisibleSpace]",
"4"
}
],
"** DefCovD:  Computing RicciToTFRicci for dim "4,
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** DefCovD:  Computing RicciToEinsteinRules for dim \"",
"\[InvisibleSpace]",
"4"
}
],
"** DefCovD:  Computing RicciToEinsteinRules for dim "4,
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** \"",
"\[InvisibleSpace]",
"DefTensor",
"\[InvisibleSpace]",
"\": Defining \"",
"\[InvisibleSpace]",
"\"weight +2 density \"",
"\[InvisibleSpace]",
RowBox[{"Detmetric", "[", "]"}],
"\[InvisibleSpace]",
"\". \"",
"\[InvisibleSpace]",
"\"Determinant.\""
}
],
SequenceForm[
"** ",
xAct`xTensor`DefTensor,
": Defining ",
"weight +2 density ",
Detmetric[],
". ",
"Determinant."
],
Editable -> False
]
],
"Print"
]
},
Open
]
]
},
Open
]
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[{"PrintAs", "[", "metric", "]"}],
" ",
"^=",
" ",
"\"g\""
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[{"PrintAs", "[", "epsilonmetric", "]"}],
" ",
"^=",
" ",
"\"\[Epsilon]\""
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[{"PrintAs", "[", "RiemannCD", "]"}],
" ",
"^=",
" ",
"\"R\""
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[{"PrintAs", "[", "RicciCD", "]"}],
" ",
"^=",
" ",
"\"R\""
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[{"PrintAs", "[", "RicciScalarCD", "]"}],
" ",
"^=",
" ",
"\"R\""
}
],
";"
}
]
}
],
"Input"
],
Cell[
CellGroupData[
{
Cell["Main setup", "Subsection"],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"ReportSetOption",
"[",
RowBox[
{
"ContractMetric",
",",
RowBox[{"AllowUpperDerivatives", "\[Rule]", "True"}]
}
],
"]"
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[{RowBox[{"$InvSimplifyLevel", "=", "6"}], ";"}],
"\[IndentingNewLine]",
RowBox[
{RowBox[{"$CurvatureRelations", "=", "False"}], ";"}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"ReportSet",
"[",
RowBox[{"$PrePrint", ",", "ScreenDollarIndices"}],
"]"
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"ReportSet",
"[",
RowBox[{"$CovDFormat", ",", "\"Postfix\""}],
"]"
}
],
";"
}
]
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
RowBox[
{
"ReportSetOption",
"[",
RowBox[
{
"DefCovD",
",",
RowBox[{"CurvatureRelations", "\[Rule]", "False"}]
}
],
"]"
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"** Option \"",
"\[InvisibleSpace]",
"CurvatureRelations",
"\[InvisibleSpace]",
"\" of \"",
"\[InvisibleSpace]",
"DefCovD",
"\[InvisibleSpace]",
"\" changed from \"",
"\[InvisibleSpace]",
"True",
"\[InvisibleSpace]",
"\" to \"",
"\[InvisibleSpace]",
"False"
}
],
SequenceForm[
"** Option ",
xAct`xTensor`CurvatureRelations,
" of ",
xAct`xTensor`DefCovD,
" changed from ",
True,
" to ",
False
],
Editable -> False
]
],
"Print"
]
},
Open
]
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[{"tostring", "[", "list_List", "]"}],
":=",
RowBox[
{
"StringJoin",
"[",
RowBox[{"ToString", "/@", "list"}],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"Change",
" ",
"made",
" ",
"here",
" ",
"to",
" ",
"format",
" ",
"RInv",
" ",
"to",
" ",
"have",
" ",
"a",
" ",
"super",
" ",
"script",
" ",
"with",
" ",
"the",
" ",
"rank",
" ",
"and",
" ",
"add",
" ",
"a",
" ",
"argument",
" ",
"for",
" ",
RowBox[{"indices", ".", " ", "No"}],
" ",
"duals",
" ",
"in",
" ",
"this",
" ",
"version"
}
],
" ",
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RInv",
"[",
RowBox[{"metric_", ",", RowBox[{"IndexList", "[", "]"}]}],
"]"
}
],
"[",
RowBox[{"case_", ",", "index_"}],
"]"
}
],
":=",
RowBox[
{
RowBox[{"RInv", "[", "metric", "]"}],
"[",
RowBox[{"0", ",", "case", ",", "index"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInv",
"[",
RowBox[{"metric_", ",", RowBox[{"IndexList", "[", "]"}]}],
"]"
}
],
"[",
RowBox[{"case_", ",", "index_"}],
"]"
}
],
":=",
RowBox[
{
RowBox[{"DualRInv", "[", "metric", "]"}],
"[",
RowBox[{"0", ",", "case", ",", "index"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"WInv",
"[",
RowBox[{"metric_", ",", RowBox[{"IndexList", "[", "]"}]}],
"]"
}
],
"[",
RowBox[{"case_", ",", "index_"}],
"]"
}
],
":=",
RowBox[
{
RowBox[{"WInv", "[", "metric", "]"}],
"[",
RowBox[{"0", ",", "case", ",", "index"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"DualWInv",
"[",
RowBox[{"metric_", ",", RowBox[{"IndexList", "[", "]"}]}],
"]"
}
],
"[",
RowBox[{"case_", ",", "index_"}],
"]"
}
],
":=",
RowBox[
{
RowBox[{"DualWInv", "[", "metric", "]"}],
"[",
RowBox[{"0", ",", "case", ",", "index"}],
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RInv",
"[",
RowBox[
{"case_List", ",", RowBox[{"index_", "?", "IntegerQ"}]}
],
"]"
}
],
":=",
RowBox[
{
"RInv",
"[",
RowBox[{"0", ",", "case", ",", "index"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInv",
"[",
RowBox[
{"case_List", ",", RowBox[{"index_", "?", "IntegerQ"}]}
],
"]"
}
],
":=",
RowBox[
{
"DualRInv",
"[",
RowBox[{"0", ",", "case", ",", "index"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"WInv",
"[",
RowBox[
{"case_List", ",", RowBox[{"index_", "?", "IntegerQ"}]}
],
"]"
}
],
":=",
RowBox[
{
"WInv",
"[",
RowBox[{"0", ",", "case", ",", "index"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"DualWInv",
"[",
RowBox[
{"case_List", ",", RowBox[{"index_", "?", "IntegerQ"}]}
],
"]"
}
],
":=",
RowBox[
{
"DualRInv",
"[",
RowBox[{"0", ",", "case", ",", "index"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"Format",
"[",
RowBox[
{
RowBox[{"RInv", "[", RowBox[{"_", ",", "_"}], "]"}],
"[",
RowBox[{"rank_", ",", "case_", ",", "index_"}],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
"Subscript",
"[",
RowBox[
{
RowBox[
{
"Superscript",
"[",
RowBox[
{"\"I\"", ",", RowBox[{"ToString", "[", "rank", "]"}]}
],
"]"
}
],
",",
RowBox[
{
"StringJoin",
"[",
RowBox[
{
RowBox[{"tostring", "[", "case", "]"}],
",",
"\",\"",
" ",
",",
" ",
RowBox[{"ToString", "[", "index", "]"}]
}
],
"]"
}
]
}
],
"]"
}
]
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"Format",
"[",
RowBox[
{
RowBox[{"WInv", "[", RowBox[{"_", ",", "_"}], "]"}],
"[",
RowBox[{"rank_", ",", "case_", ",", "index_"}],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
"Subscript",
"[",
RowBox[
{
RowBox[
{
"Superscript",
"[",
RowBox[
{"\"W\"", ",", RowBox[{"ToString", "[", "rank", "]"}]}
],
"]"
}
],
",",
RowBox[
{
"StringJoin",
"[",
RowBox[
{
RowBox[{"tostring", "[", "case", "]"}],
",",
"\",\"",
" ",
",",
" ",
RowBox[{"ToString", "[", "index", "]"}]
}
],
"]"
}
]
}
],
"]"
}
]
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"Format",
"[",
RowBox[
{
RowBox[{"DualRInv", "[", RowBox[{"_", ",", "_"}], "]"}],
"[",
RowBox[{"rank_", ",", "case_", ",", "index_"}],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
"Subscript",
"[",
RowBox[
{
RowBox[
{
"Superscript",
"[",
RowBox[
{"\"D\"", ",", RowBox[{"ToString", "[", "rank", "]"}]}
],
"]"
}
],
",",
RowBox[
{
"StringJoin",
"[",
RowBox[
{
RowBox[{"tostring", "[", "case", "]"}],
",",
"\",\"",
" ",
",",
" ",
RowBox[{"ToString", "[", "index", "]"}]
}
],
"]"
}
]
}
],
"]"
}
]
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"Format",
"[",
RowBox[
{
RowBox[{"DualWInv", "[", RowBox[{"_", ",", "_"}], "]"}],
"[",
RowBox[{"rank_", ",", "case_", ",", "index_"}],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
"Subscript",
"[",
RowBox[
{
RowBox[
{
"Superscript",
"[",
RowBox[
{"\"X\"", ",", RowBox[{"ToString", "[", "rank", "]"}]}
],
"]"
}
],
",",
RowBox[
{
"StringJoin",
"[",
RowBox[
{
RowBox[{"tostring", "[", "case", "]"}],
",",
"\",\"",
" ",
",",
" ",
RowBox[{"ToString", "[", "index", "]"}]
}
],
"]"
}
]
}
],
"]"
}
]
}
]
],
"Input"
],
Cell[BoxData[""], "Input"],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"Format",
"[",
RowBox[
{
"RInv",
"[",
RowBox[{"rank_", ",", "case_", ",", "index_"}],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
"Subscript",
"[",
RowBox[
{
RowBox[
{
"Superscript",
"[",
RowBox[
{"\"I\"", ",", RowBox[{"ToString", "[", "rank", "]"}]}
],
"]"
}
],
",",
RowBox[
{
"StringJoin",
"[",
RowBox[
{
RowBox[{"tostring", "[", "case", "]"}],
",",
"\",\"",
" ",
",",
" ",
RowBox[{"ToString", "[", "index", "]"}]
}
],
"]"
}
]
}
],
"]"
}
]
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"Format",
"[",
RowBox[
{
"DualRInv",
"[",
RowBox[{"rank_", ",", "case_", ",", "index_"}],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
"Subscript",
"[",
RowBox[
{
RowBox[
{
"Superscript",
"[",
RowBox[
{"\"D\"", ",", RowBox[{"ToString", "[", "rank", "]"}]}
],
"]"
}
],
",",
RowBox[
{
"StringJoin",
"[",
RowBox[
{
RowBox[{"tostring", "[", "case", "]"}],
",",
"\",\"",
" ",
",",
" ",
RowBox[{"ToString", "[", "index", "]"}]
}
],
"]"
}
]
}
],
"]"
}
]
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"Format",
"[",
RowBox[
{
"WInv",
"[",
RowBox[{"rank_", ",", "case_", ",", "index_"}],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
"Subscript",
"[",
RowBox[
{
RowBox[
{
"Superscript",
"[",
RowBox[
{"\"W\"", ",", RowBox[{"ToString", "[", "rank", "]"}]}
],
"]"
}
],
",",
RowBox[
{
"StringJoin",
"[",
RowBox[
{
RowBox[{"tostring", "[", "case", "]"}],
",",
"\",\"",
" ",
",",
" ",
RowBox[{"ToString", "[", "index", "]"}]
}
],
"]"
}
]
}
],
"]"
}
]
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"Format",
"[",
RowBox[
{
"DualWInv",
"[",
RowBox[{"rank_", ",", "case_", ",", "index_"}],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
"Subscript",
"[",
RowBox[
{
RowBox[
{
"Superscript",
"[",
RowBox[
{"\"X\"", ",", RowBox[{"ToString", "[", "rank", "]"}]}
],
"]"
}
],
",",
RowBox[
{
"StringJoin",
"[",
RowBox[
{
RowBox[{"tostring", "[", "case", "]"}],
",",
"\",\"",
" ",
",",
" ",
RowBox[{"ToString", "[", "index", "]"}]
}
],
"]"
}
]
}
],
"]"
}
]
}
]
],
"Input"
],
Cell[
BoxData[RowBox[{RowBox[{"$ReadWeyl", "=", "False"}], ";"}]],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"$TInvarDirectory",
"=",
RowBox[{"NotebookDirectory", "[", "]"}]
}
]
],
"Input"
],
Cell[
BoxData[
"\"/Users/kevinkiely/Mathematica/TInvarGit/TInvar/\""
],
"Output"
]
},
Open
]
],
Cell[
BoxData[
RowBox[
{RowBox[{"$DataBaseDir", "=", "\"Riemann/\""}], ";"}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"Need",
" ",
"to",
" ",
"add",
" ",
"the",
" ",
"backwards",
" ",
"compatibility",
" ",
"notation"
}
],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"From",
" ",
"Riemann",
" ",
"to",
" ",
RowBox[{"Weyl", ".", " ", "No"}],
" ",
"Dimension",
" ",
"added"
}
],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"WInvs",
"[",
RowBox[{"step_Integer", ",", "rank_", ",", "deg_"}],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"step", ",", "rank", ",", "deg"}],
"]"
}
],
"/.",
RowBox[{"RInv", "\[Rule]", "WInv"}]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[{"No", " ", "change", " ", "from", " ", "Invar"}],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
"SetAttributes",
"[",
RowBox[{"ProtSet", ",", "HoldFirst"}],
"]"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"ProtSet",
"[",
RowBox[
{RowBox[{"head_", "[", "args___", "]"}], ",", "value_"}
],
"]"
}
],
":=",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[
{
"{",
RowBox[
{"prot", "=", RowBox[{"Unprotect", "[", "head", "]"}]}
],
"}"
}
],
",",
RowBox[
{
RowBox[
{
"Set",
"[",
RowBox[{RowBox[{"head", "[", "args", "]"}], ",", "value"}],
"]"
}
],
";",
RowBox[
{
"Protect",
"[",
RowBox[{"Evaluate", "[", "prot", "]"}],
"]"
}
],
";",
"value"
}
]
}
],
"]"
}
]
}
],
";"
}
]
}
],
"Input"
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["File Names", "Subsection"],
Cell[
BoxData[
RowBox[
{"(*", RowBox[{"Same", " ", "as", " ", "Invar"}], "*)"}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[{"intercase", "[", "case_List", "]"}],
":=",
RowBox[
{
"StringJoin",
"@",
RowBox[
{
"Insert",
"[",
RowBox[
{
RowBox[{"ToString", "/@", "case"}],
",",
"\"_\"",
",",
RowBox[
{
"List",
"/@",
RowBox[
{
"Range",
"[",
RowBox[{"2", ",", RowBox[{"Length", "[", "case", "]"}]}],
"]"
}
]
}
]
}
],
"]"
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
RowBox[
{
"No",
" ",
"Dim",
" ",
"also",
" ",
"modified",
" ",
"for",
" ",
"rank"
}
],
"-",
"case",
"-",
"step"
}
],
" ",
"*)"
}
]
],
"Input"
],
Cell[BoxData[""], "Input"],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"filename",
"[",
RowBox[{"step_", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
"StringJoin",
"[",
RowBox[
{
"\"RInv-\"",
",",
RowBox[{"ToString", "[", "rank", "]"}],
",",
"\"-\"",
",",
RowBox[{"intercase", "[", "case", "]"}],
",",
"\"-\"",
",",
RowBox[{"ToString", "[", "step", "]"}]
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[BoxData[""], "Input"],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"filename",
"[",
RowBox[
{
RowBox[
{"step", ":", RowBox[{"(", RowBox[{"5", "|", "6"}], ")"}]}
],
",",
"rank_",
",",
"case_",
",",
"dim_"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"filename",
"[",
RowBox[
{
RowBox[{"ToString", "[", "step", "]"}],
",",
"rank",
",",
"case"
}
],
"]"
}
],
"<>",
"\"_\"",
"<>",
RowBox[{"ToString", "[", "dim", "]"}]
}
]
}
],
";"
}
],
"\[IndentingNewLine]"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"dualfilename",
"[",
RowBox[{"5", ",", "rank_", ",", "case_", ",", "dim_"}],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"dualfilename",
"[",
RowBox[{"\"5\"", ",", "rank", ",", "case"}],
"]"
}
],
"<>",
"\"_\"",
"<>",
RowBox[{"ToString", "[", "dim", "]"}]
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"dualfilename",
"[",
RowBox[{"step_", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
"StringJoin",
"[",
RowBox[
{
"\"DInv-\"",
",",
RowBox[{"ToString", "[", "rank", "]"}],
",",
"\"-\"",
",",
RowBox[{"intercase", "[", "case", "]"}],
",",
"\"-\"",
",",
RowBox[{"ToString", "[", "step", "]"}]
}
],
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"dualfilename",
"[",
RowBox[
{
"5",
",",
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}],
",",
"4"
}
],
"]"
}
]
],
"Input"
],
Cell[BoxData["\"DInv-0-0_0_0-5_4\""], "Output"]
},
Open
]
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"intercase",
"[",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}],
"]"
}
]
],
"Input"
],
Cell[BoxData["\"0_0_0\""], "Output"]
},
Open
]
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["Check the import of the files", "Subsection"],
Cell[
BoxData[
RowBox[{"(*", RowBox[{"No", " ", "changes"}], "*)"}]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[{"RInv", "::", "nodatabase"}],
"=",
"\"Can't find the Invar database. You can download it from http://www.xact.es/Invar/.\""
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[{"CheckImport", "[", "args__", "]"}],
":=",
RowBox[
{
"Quiet",
"[",
RowBox[
{
RowBox[
{
"Check",
"[",
RowBox[
{
RowBox[{"Import", "[", "args", "]"}],
",",
RowBox[
{
RowBox[
{"Message", "[", RowBox[{"RInv", "::", "nodatabase"}], "]"}
],
";",
RowBox[{"Abort", "[", "]"}]
}
]
}
],
"]"
}
],
",",
RowBox[{"Import", "::", "nffil"}]
}
],
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"All",
" ",
"permutations",
" ",
"are",
" ",
"in",
" ",
"Mathematica",
" ",
"notation"
}
],
"*)"
}
]
],
"Input"
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell[
TextData[
{
"Reading functions. ",
StyleBox["Mathematica", FontSlant -> "Italic"],
" notation"
}
],
"Subsection"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[{"firstof", "[", RowBox[{"{", "}"}], "]"}],
":=",
"0"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"firstof",
"[",
RowBox[
{"{", RowBox[{"{", RowBox[{"a_", ",", "b_"}], "}"}], "}"}
],
"]"
}
],
":=",
"a"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"firstof",
"[",
RowBox[
{
"{",
RowBox[
{RowBox[{"{", RowBox[{"a_", ",", "b_"}], "}"}], ",", "__"}
],
"}"
}
],
"]"
}
],
":=",
"a"
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"positionof",
"[",
RowBox[{"string_String", ",", "substring_String"}],
"]"
}
],
":=",
RowBox[
{
"firstof",
"@",
RowBox[
{
"StringPosition",
"[",
RowBox[{"string", ",", "substring"}],
"]"
}
]
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[{RowBox[{"movetofirst", "[", "0", "]"}], ":=", "1"}],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"movetofirst", "[", "x_", "]"}],
":=",
RowBox[{"x", "+", "4"}]
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[{"replacebrackets", "[", "string_String", "]"}],
":=",
RowBox[
{
"StringReplace",
"[",
RowBox[
{
"string",
",",
RowBox[
{
"{",
RowBox[
{
RowBox[{"\"[\"", "\[Rule]", "\"{\""}],
",",
RowBox[{"\"]\"", "\[Rule]", "\"}\""}]
}
],
"}"
}
]
}
],
"]"
}
]
}
],
"\n",
RowBox[
{
RowBox[{"replaceequal", "[", "string_String", "]"}],
":=",
RowBox[
{
"StringReplace",
"[",
RowBox[
{
"string",
",",
RowBox[{"{", RowBox[{"\"=\"", "\[Rule]", "\"->\""}], "}"}]
}
],
"]"
}
]
}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[{"readline", "[", "string_", "]"}],
":=",
RowBox[
{
"StringTake",
"[",
RowBox[
{
"string",
",",
RowBox[
{
"{",
RowBox[
{
RowBox[
{
"movetofirst",
"@",
RowBox[
{
"positionof",
"[",
RowBox[{"string", ",", "\" := \""}],
"]"
}
]
}
],
",",
RowBox[
{RowBox[{"StringLength", "[", "string", "]"}], "-", "1"}
]
}
],
"}"
}
]
}
],
"]"
}
]
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"Need",
" ",
"to",
" ",
"check",
" ",
"this",
" ",
"works",
" ",
"for",
" ",
"TInvar"
}
],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"ReadInvarPerms",
"[",
RowBox[{"filename_", ",", "\"Maple\""}],
"]"
}
],
":=",
RowBox[
{
"ToExpression",
"/@",
RowBox[
{
"replacebrackets",
"/@",
RowBox[
{
"readline",
"/@",
RowBox[
{
"CheckImport",
"[",
RowBox[
{
RowBox[
{
"StringJoin",
"[",
RowBox[{"$TInvarDirectory", ",", "\"/\"", ",", "filename"}],
"]"
}
],
",",
"\"Lines\""
}
],
"]"
}
]
}
]
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"ReadInvarRules",
"[",
RowBox[{"filename_", ",", "\"Mathematica\""}],
"]"
}
],
":=",
RowBox[
{
"ToExpression",
"/@",
RowBox[
{
"CheckImport",
"[",
RowBox[
{
RowBox[
{
"StringJoin",
"[",
RowBox[{"$TInvarDirectory", ",", "filename"}],
"]"
}
],
",",
"\"Lines\""
}
],
"]"
}
]
}
]
}
],
";"
}
]
],
"Input"
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["Removing rules", "Subsection"],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"Come",
" ",
"back",
" ",
"to",
" ",
"this",
" ",
"when",
" ",
"I",
" ",
"have",
" ",
"all",
" ",
"the",
" ",
"steps"
}
],
"*)"
}
]
],
"Input"
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["Metric argument", "Subsection"],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"Need",
" ",
"to",
" ",
"test",
" ",
RowBox[{"this", ".", " ", "No"}],
" ",
"changes",
" ",
"made"
}
],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"addRdep",
"[",
RowBox[
{
"Rule",
"[",
RowBox[
{
RowBox[
{"inv_", "[", RowBox[{"case_", ",", "count_"}], "]"}
],
",",
"rhs_"
}
],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
"Rule",
"[",
RowBox[
{
RowBox[
{
RowBox[
{"inv", "[", RowBox[{"metric_", ",", "indexlist_"}], "]"}
],
"[",
RowBox[{"case", ",", "count"}],
"]"
}
],
",",
RowBox[
{
"rhs",
"/.",
RowBox[
{
"{",
RowBox[
{
RowBox[
{"RInv", "\[Rule]", RowBox[{"RInv", "[", "metric", "]"}]}
],
",",
RowBox[
{
"DualRInv",
"\[Rule]",
RowBox[{"DualRInv", "[", "metric", "]"}]
}
],
",",
RowBox[
{"WInv", "\[Rule]", RowBox[{"WInv", "[", "metric", "]"}]}
],
",",
RowBox[
{
"DualWInv",
"\[Rule]",
RowBox[{"DualWInv", "[", "metric", "]"}]
}
]
}
],
"}"
}
]
}
]
}
],
"]"
}
]
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"metric_", ",", "indexlist_IndexList"}],
"]"
}
],
"[",
"args__",
"]"
}
],
":=",
RowBox[
{
RowBox[{"RInvs", "[", "args", "]"}],
"/.",
RowBox[
{"RInv", "\[Rule]", RowBox[{"RInv", "[", "metric", "]"}]}
]
}
]
}
],
";",
RowBox[
{
RowBox[
{
RowBox[
{
"WInvs",
"[",
RowBox[{"metric_", ",", "indexlist_IndexList"}],
"]"
}
],
"[",
"args__",
"]"
}
],
":=",
RowBox[
{
RowBox[{"WInvs", "[", "args", "]"}],
"/.",
RowBox[
{"WInv", "\[Rule]", RowBox[{"WInv", "[", "metric", "]"}]}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[{"DualRInvs", "[", "metric_", "]"}],
"[",
"args__",
"]"
}
],
":=",
RowBox[
{
RowBox[{"DualRInvs", "[", "args", "]"}],
"/.",
RowBox[
{
"DualRInv",
"\[Rule]",
RowBox[{"DualRInv", "[", "metric", "]"}]
}
]
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[{"DualWInvs", "[", "metric_", "]"}],
"[",
"args__",
"]"
}
],
":=",
RowBox[
{
RowBox[{"DualWInvs", "[", "args", "]"}],
"/.",
RowBox[
{
"DualWInv",
"\[Rule]",
RowBox[{"DualWInv", "[", "metric", "]"}]
}
]
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"$DefaultDim",
":=",
RowBox[
{
"DimOfVBundle",
"@",
RowBox[
{
"VBundleOfMetric",
"@",
RowBox[{"First", "@", "$Metrics"}]
}
]
}
]
}
],
";"
}
]
],
"Input"
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["Cases", "Subsection"],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"With",
" ",
"the",
" ",
"way",
" ",
"this",
" ",
"is",
" ",
"currently",
" ",
"implimented",
" ",
"it",
" ",
"is",
" ",
"not",
" ",
"very",
" ",
"clear",
" ",
"as",
" ",
"the",
" ",
"cases",
" ",
"will",
" ",
"depend",
" ",
"on",
" ",
"the",
" ",
RowBox[{"rank", ".", " ", "Should"}],
" ",
"I",
" ",
"impliment",
" ",
"a",
" ",
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"rank_", ",", " ", "order_", ",", "deg_"}],
"]"
}
],
"?"
}
]
}
],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[{"InvarCases", "[", "0", "]"}],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
"Table",
"[",
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "order"}], "]"}
],
",",
RowBox[
{
"{",
RowBox[{"order", ",", "2", ",", "14", ",", "2"}],
"}"
}
]
}
],
"]"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[{"InvarCases", "[", "1", "]"}],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
"Table",
"[",
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"1", ",", "order"}], "]"}
],
",",
RowBox[
{"{", RowBox[{"order", ",", "3", ",", "6", ",", "2"}], "}"}
]
}
],
"]"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"InvarCases", "[", "2", "]"}],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
"Table",
"[",
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"2", ",", "order"}], "]"}
],
",",
RowBox[
{"{", RowBox[{"order", ",", "2", ",", "6", ",", "2"}], "}"}
]
}
],
"]"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[{"InvarCases", "[", "3", "]"}],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
"Table",
"[",
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"3", ",", "order"}], "]"}
],
",",
RowBox[
{"{", RowBox[{"order", ",", "3", ",", "6", ",", "2"}], "}"}
]
}
],
"]"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"InvarCases", "[", "4", "]"}],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
"Table",
"[",
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"4", ",", "order"}], "]"}
],
",",
RowBox[
{"{", RowBox[{"order", ",", "2", ",", "6", ",", "2"}], "}"}
]
}
],
"]"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"InvarCases", "[", "5", "]"}],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
"Table",
"[",
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"5", ",", "order"}], "]"}
],
",",
RowBox[
{"{", RowBox[{"order", ",", "3", ",", "6", ",", "2"}], "}"}
]
}
],
"]"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"InvarCases", "[", "6", "]"}],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
"Table",
"[",
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"6", ",", "order"}], "]"}
],
",",
RowBox[
{"{", RowBox[{"order", ",", "4", ",", "6", ",", "2"}], "}"}
]
}
],
"]"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"InvarCases", "[", "7", "]"}],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
"Table",
"[",
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"7", ",", "order"}], "]"}
],
",",
RowBox[
{"{", RowBox[{"order", ",", "5", ",", "6", ",", "2"}], "}"}
]
}
],
"]"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"InvarCases", "[", "8", "]"}],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
"Table",
"[",
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"8", ",", "order"}], "]"}
],
",",
RowBox[
{"{", RowBox[{"order", ",", "4", ",", "6", ",", "2"}], "}"}
]
}
],
"]"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"InvarCases", "[", "9", "]"}],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
"Table",
"[",
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"9", ",", "order"}], "]"}
],
",",
RowBox[
{"{", RowBox[{"order", ",", "5", ",", "6", ",", "2"}], "}"}
]
}
],
"]"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"InvarCases", "[", "10", "]"}],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
"Table",
"[",
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"10", ",", "order"}], "]"}
],
",",
RowBox[
{"{", RowBox[{"order", ",", "6", ",", "6", ",", "2"}], "}"}
]
}
],
"]"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"InvarCases", "[", "12", "]"}],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
"Table",
"[",
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"12", ",", "order"}], "]"}
],
",",
RowBox[
{"{", RowBox[{"order", ",", "6", ",", "6", ",", "2"}], "}"}
]
}
],
"]"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\n",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[
{"rank_", ",", RowBox[{"order_Integer", "?", "EvenQ"}]}
],
"]"
}
],
":=",
RowBox[
{
"InvarCases",
"[",
RowBox[
{
"rank",
",",
"order",
",",
RowBox[
{
"Reverse",
"@",
RowBox[{"Range", "[", RowBox[{"order", "/", "2"}], "]"}]
}
]
}
],
"]"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[
{
"rank_",
",",
RowBox[{"order_Integer", "?", "EvenQ"}],
",",
"list_List"
}
],
"]"
}
],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"rank", ",", "order", ",", "#"}],
"]"
}
],
"&"
}
],
"/@",
"list"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[
{"rank_", ",", RowBox[{"order_Integer", "?", "OddQ"}]}
],
"]"
}
],
":=",
RowBox[
{
"InvarCases",
"[",
RowBox[
{
"rank",
",",
"order",
",",
RowBox[
{
"Reverse",
"@",
RowBox[
{
"Range",
"[",
RowBox[
{
"Round",
"[",
RowBox[
{RowBox[{"(", RowBox[{"order", "-", "1"}], ")"}], "/", "2"}
],
"]"
}
],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[
{
"rank_",
",",
RowBox[{"order_Integer", "?", "OddQ"}],
",",
"list_List"
}
],
"]"
}
],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"rank", ",", "order", ",", "#"}],
"]"
}
],
"&"
}
],
"/@",
"list"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\n",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "2", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "0", "}"}], "}"}]
}
],
";"
}
],
"\n",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "4", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "2", "}"}], "}"}]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "4", ",", "2"}], "]"}
],
"=",
RowBox[
{"{", RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}], "}"}
]
}
],
";"
}
],
"\n",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "6", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "4", "}"}], "}"}]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "6", ",", "2"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "6", ",", "3"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}],
"}"
}
]
}
],
";"
}
],
"\n",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "8", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "6", "}"}], "}"}]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "8", ",", "2"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"2", ",", "2"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "8", ",", "3"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "1"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "8", ",", "4"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}
],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "10", ",", "1"}],
"]"
}
],
"=",
RowBox[{"{", RowBox[{"{", "8", "}"}], "}"}]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "10", ",", "2"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "6"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"2", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"3", ",", "3"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "10", ",", "3"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "0", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "2", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1", ",", "2"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "10", ",", "4"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "2"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}
]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "10", ",", "5"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}],
"}"
}
],
"}"
}
]
}
],
";"
}
],
"\n",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "12", ",", "1"}],
"]"
}
],
"=",
RowBox[{"{", RowBox[{"{", "10", "}"}], "}"}]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "12", ",", "2"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "8"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "7"}], "}"}],
",",
RowBox[{"{", RowBox[{"2", ",", "6"}], "}"}],
",",
RowBox[{"{", RowBox[{"3", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"4", ",", "4"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "12", ",", "3"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "0", ",", "6"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "2", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "3", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "2", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"2", ",", "2", ",", "2"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "12", ",", "4"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "4"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "1", ",", "3"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "2", ",", "2"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"0", ",", "1", ",", "1", ",", "2"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}
]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "12", ",", "5"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "2"}],
"}"
}
],
",",
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "1"}],
"}"
}
]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "12", ",", "6"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
"{",
RowBox[
{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}
],
"}"
}
],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "14", ",", "7"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
"{",
RowBox[
{
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0"
}
],
"}"
}
],
"}"
}
]
}
],
";"
}
]
}
]
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"2", ",", "2", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "0", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"4", ",", "2", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "0", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"1", ",", "3", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "1", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"3", ",", "3", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "1", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"5", ",", "3", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "1", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"2", ",", "4", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "2", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"4", ",", "4", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "2", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"6", ",", "4", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "2", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"8", ",", "4", ",", "2"}], "]"}
],
"=",
RowBox[
{"{", RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}], "}"}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"6", ",", "4", ",", "2"}], "]"}
],
"=",
RowBox[
{"{", RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}], "}"}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"4", ",", "4", ",", "2"}], "]"}
],
"=",
RowBox[
{"{", RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}], "}"}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"2", ",", "4", ",", "2"}], "]"}
],
"=",
RowBox[
{"{", RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}], "}"}
]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"7", ",", "5", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "3", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"5", ",", "5", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "3", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"3", ",", "5", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "3", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"1", ",", "5", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "3", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"9", ",", "5", ",", "2"}], "]"}
],
"=",
RowBox[
{"{", RowBox[{"{", RowBox[{"0", ",", "1"}], "}"}], "}"}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"7", ",", "5", ",", "2"}], "]"}
],
"=",
RowBox[
{"{", RowBox[{"{", RowBox[{"0", ",", "1"}], "}"}], "}"}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"5", ",", "5", ",", "2"}], "]"}
],
"=",
RowBox[
{"{", RowBox[{"{", RowBox[{"0", ",", "1"}], "}"}], "}"}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"3", ",", "5", ",", "2"}], "]"}
],
"=",
RowBox[
{"{", RowBox[{"{", RowBox[{"0", ",", "1"}], "}"}], "}"}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"1", ",", "5", ",", "2"}], "]"}
],
"=",
RowBox[
{"{", RowBox[{"{", RowBox[{"0", ",", "1"}], "}"}], "}"}
]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"8", ",", "6", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "4", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"6", ",", "6", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "4", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"4", ",", "6", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "4", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"2", ",", "6", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "4", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"10", ",", "6", ",", "2"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"8", ",", "6", ",", "2"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"6", ",", "6", ",", "2"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"4", ",", "6", ",", "2"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"2", ",", "6", ",", "2"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"12", ",", "6", ",", "3"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"10", ",", "6", ",", "3"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"8", ",", "6", ",", "3"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"6", ",", "6", ",", "3"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"4", ",", "6", ",", "3"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"2", ",", "6", ",", "3"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[{"InvarCases", "[", RowBox[{"0", ",", "14"}], "]"}],
":=",
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "14", ",", "7"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "2", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "0", "}"}], "}"}]
}
],
";"
}
],
"\n"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "4", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "2", "}"}], "}"}]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "4", ",", "2"}], "]"}
],
"=",
RowBox[
{"{", RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}], "}"}
]
}
],
";"
}
],
"\n"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "6", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "4", "}"}], "}"}]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "6", ",", "2"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "6", ",", "3"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}],
"}"
}
]
}
],
";"
}
],
"\n"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "8", ",", "1"}], "]"}
],
"=",
RowBox[{"{", RowBox[{"{", "6", "}"}], "}"}]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "8", ",", "2"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"2", ",", "2"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "8", ",", "3"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "1"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarCases", "[", RowBox[{"0", ",", "8", ",", "4"}], "]"}
],
"=",
RowBox[
{
"{",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}
],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "10", ",", "1"}],
"]"
}
],
"=",
RowBox[{"{", RowBox[{"{", "8", "}"}], "}"}]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "10", ",", "2"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "6"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"2", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"3", ",", "3"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "10", ",", "3"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "0", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "2", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1", ",", "2"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "10", ",", "4"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "2"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}
]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "10", ",", "5"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}],
"}"
}
],
"}"
}
]
}
],
";"
}
],
"\n"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "12", ",", "1"}],
"]"
}
],
"=",
RowBox[{"{", RowBox[{"{", "10", "}"}], "}"}]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "12", ",", "2"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "8"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "7"}], "}"}],
",",
RowBox[{"{", RowBox[{"2", ",", "6"}], "}"}],
",",
RowBox[{"{", RowBox[{"3", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"4", ",", "4"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "12", ",", "3"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "0", ",", "6"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "2", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "3", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "2", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"2", ",", "2", ",", "2"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "12", ",", "4"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "4"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "1", ",", "3"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "2", ",", "2"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"0", ",", "1", ",", "1", ",", "2"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}
]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "12", ",", "5"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "2"}],
"}"
}
],
",",
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "1"}],
"}"
}
]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "12", ",", "6"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
"{",
RowBox[
{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}
],
"}"
}
],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarCases",
"[",
RowBox[{"0", ",", "14", ",", "7"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
"{",
RowBox[
{
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0"
}
],
"}"
}
],
"}"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[RowBox[{"InvarCases", "[", "0", "]"}]],
"Input"
],
Cell[
BoxData[
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", "0", "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}],
",",
RowBox[{"{", "2", "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}],
",",
RowBox[{"{", "4", "}"}],
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}
],
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "1"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"2", ",", "2"}], "}"}],
",",
RowBox[{"{", "6", "}"}],
",",
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}],
"}"
}
],
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "2"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}
],
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "2", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "6"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"2", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"3", ",", "3"}], "}"}],
",",
RowBox[{"{", "8", "}"}],
",",
RowBox[
{
"{",
RowBox[
{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}
],
"}"
}
],
",",
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "2"}],
"}"
}
],
",",
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "1"}],
"}"
}
],
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "4"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "1", ",", "3"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "2", ",", "2"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"0", ",", "1", ",", "1", ",", "2"}], "}"}
],
",",
RowBox[
{"{", RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}
],
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "6"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "2", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "3", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "2", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"2", ",", "2", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "8"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "7"}], "}"}],
",",
RowBox[{"{", RowBox[{"2", ",", "6"}], "}"}],
",",
RowBox[{"{", RowBox[{"3", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"4", ",", "4"}], "}"}],
",",
RowBox[{"{", "10", "}"}],
",",
RowBox[
{
"{",
RowBox[
{
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0"
}
],
"}"
}
]
}
],
"}"
}
]
],
"Output"
]
},
Open
]
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[{"InvarDualCases", "[", "0", "]"}],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
"Table",
"[",
RowBox[
{
RowBox[
{"InvarDualCases", "[", RowBox[{"0", ",", "order"}], "]"}
],
",",
RowBox[
{
"{",
RowBox[{"order", ",", "2", ",", "10", ",", "2"}],
"}"
}
]
}
],
"]"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarDualCases",
"[",
RowBox[{"0", ",", RowBox[{"order_Integer", "?", "EvenQ"}]}],
"]"
}
],
":=",
RowBox[
{
"InvarDualCases",
"[",
RowBox[
{
"0",
",",
"order",
",",
RowBox[
{
"Reverse",
"@",
RowBox[{"Range", "[", RowBox[{"order", "/", "2"}], "]"}]
}
]
}
],
"]"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"InvarDualCases",
"[",
RowBox[
{
"0",
",",
RowBox[{"order_Integer", "?", "EvenQ"}],
",",
"list_List"
}
],
"]"
}
],
":=",
RowBox[
{
"Flatten",
"[",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"InvarDualCases",
"[",
RowBox[{"0", ",", "order", ",", "#"}],
"]"
}
],
"&"
}
],
"/@",
"list"
}
],
",",
"1"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvarDualCases", "[", RowBox[{"0", ",", "10"}], "]"}
],
":=",
RowBox[
{
"InvarDualCases",
"[",
RowBox[{"0", ",", "10", ",", "5"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"InvarDualCases",
"[",
RowBox[{"0", ",", "2", ",", "1"}],
"]"
}
],
"=",
RowBox[{"{", RowBox[{"{", "0", "}"}], "}"}]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarDualCases",
"[",
RowBox[{"0", ",", "4", ",", "1"}],
"]"
}
],
"=",
RowBox[{"{", RowBox[{"{", "2", "}"}], "}"}]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"InvarDualCases",
"[",
RowBox[{"0", ",", "4", ",", "2"}],
"]"
}
],
"=",
RowBox[
{"{", RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}], "}"}
]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarDualCases",
"[",
RowBox[{"0", ",", "6", ",", "1"}],
"]"
}
],
"=",
RowBox[{"{", RowBox[{"{", "4", "}"}], "}"}]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarDualCases",
"[",
RowBox[{"0", ",", "6", ",", "2"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"InvarDualCases",
"[",
RowBox[{"0", ",", "6", ",", "3"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarDualCases",
"[",
RowBox[{"0", ",", "8", ",", "1"}],
"]"
}
],
"=",
RowBox[{"{", RowBox[{"{", "6", "}"}], "}"}]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarDualCases",
"[",
RowBox[{"0", ",", "8", ",", "2"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"2", ",", "2"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"InvarDualCases",
"[",
RowBox[{"0", ",", "8", ",", "3"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"0", ",", "0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "1"}], "}"}]
}
],
"}"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"InvarDualCases",
"[",
RowBox[{"0", ",", "8", ",", "4"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}
],
"}"
}
]
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"InvarDualCases",
"[",
RowBox[{"0", ",", "10", ",", "5"}],
"]"
}
],
"=",
RowBox[
{
"{",
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}],
"}"
}
],
"}"
}
]
}
],
";"
}
],
"\n"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"InvarDualCases", "[", "x_", "]"}],
":=",
RowBox[
{
"Throw",
"[",
RowBox[
{
"Print",
"[",
RowBox[{"\"Invalid order \"", ",", "x"}],
"]"
}
],
"]"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[{"InvarDualCases", "[", "args__", "]"}],
":=",
RowBox[
{
"Throw",
"[",
RowBox[
{
"Print",
"[",
RowBox[
{
"\"Invar cannot work with the dual cases \"",
",",
RowBox[{"{", "args", "}"}]
}
],
"]"
}
],
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[RowBox[{"InvarDualCases", "[", "0", "]"}]],
"Input"
],
Cell[
BoxData[
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", "0", "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}],
",",
RowBox[{"{", "2", "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}],
",",
RowBox[{"{", "4", "}"}],
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}
],
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "2"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "1"}], "}"}],
",",
RowBox[{"{", RowBox[{"0", ",", "4"}], "}"}],
",",
RowBox[{"{", RowBox[{"1", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"2", ",", "2"}], "}"}],
",",
RowBox[{"{", "6", "}"}],
",",
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}],
"}"
}
]
}
],
"}"
}
]
],
"Output"
]
},
Open
]
],
Cell[
CellGroupData[
{
Cell[BoxData[RowBox[{"Length", "[", "%", "]"}]], "Input"],
Cell[BoxData["15"], "Output"]
},
Open
]
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell[
"Maximum degree and index for a given rank",
"Subsection"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"0", ",", RowBox[{"{", "}"}]}],
"]"
}
],
":=",
"0"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"0", ",", RowBox[{"{", "0", "}"}]}],
"]"
}
],
":=",
"1"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]}
],
"]"
}
],
":=",
"3"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"0", ",", RowBox[{"{", "2", "}"}]}],
"]"
}
],
":=",
"2"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}]
}
],
"]"
}
],
":=",
"9"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}]}
],
"]"
}
],
":=",
"12"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]}
],
"]"
}
],
":=",
"12"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"0", ",", RowBox[{"{", "4", "}"}]}],
"]"
}
],
":=",
"12"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}
]
}
],
"]"
}
],
":=",
"38"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "2"}], "}"}]
}
],
"]"
}
],
":=",
"99"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "1"}], "}"}]
}
],
"]"
}
],
":=",
"125"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"0", ",", "4"}], "}"}]}
],
"]"
}
],
":=",
"126"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"1", ",", "3"}], "}"}]}
],
"]"
}
],
":=",
"138"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"2", ",", "2"}], "}"}]}
],
"]"
}
],
":=",
"86"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"0", ",", RowBox[{"{", "6", "}"}]}],
"]"
}
],
":=",
"105"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}],
"}"
}
]
}
],
"]"
}
],
":=",
"204"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "2"}], "}"}
]
}
],
"]"
}
],
":=",
"1020"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}
]
}
],
"]"
}
],
":=",
"1749"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "4"}], "}"}]
}
],
"]"
}
],
":=",
"1473"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "3"}], "}"}]
}
],
"]"
}
],
":=",
"3099"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "2", ",", "2"}], "}"}]
}
],
"]"
}
],
":=",
"1622"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"1", ",", "1", ",", "2"}], "}"}]
}
],
"]"
}
],
":=",
"1617"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"0", ",", "6"}], "}"}]}
],
"]"
}
],
":=",
"1665"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"1", ",", "5"}], "}"}]}
],
"]"
}
],
":=",
"1770"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"2", ",", "4"}], "}"}]}
],
"]"
}
],
":=",
"1746"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"3", ",", "3"}], "}"}]}
],
"]"
}
],
":=",
"962"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"0", ",", RowBox[{"{", "8", "}"}]}],
"]"
}
],
":=",
"1155"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{
"{",
RowBox[
{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}
],
"}"
}
]
}
],
"]"
}
],
":=",
"1613"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "2"}],
"}"
}
]
}
],
"]"
}
],
":=",
"12722"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "1"}],
"}"
}
]
}
],
"]"
}
],
":=",
"27022"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "4"}], "}"}
]
}
],
"]"
}
],
":=",
"19617"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "1", ",", "3"}], "}"}
]
}
],
"]"
}
],
":=",
"60984"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "2", ",", "2"}], "}"}
]
}
],
"]"
}
],
":=",
"30974"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{"{", RowBox[{"0", ",", "1", ",", "1", ",", "2"}], "}"}
]
}
],
"]"
}
],
":=",
"62465"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{"{", RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}
]
}
],
"]"
}
],
":=",
"5606"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "6"}], "}"}]
}
],
"]"
}
],
":=",
"25590"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "5"}], "}"}]
}
],
"]"
}
],
":=",
"53160"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "2", ",", "4"}], "}"}]
}
],
"]"
}
],
":=",
"52764"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"1", ",", "1", ",", "4"}], "}"}]
}
],
"]"
}
],
":=",
"27396"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "3", ",", "3"}], "}"}]
}
],
"]"
}
],
":=",
"27024"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"1", ",", "2", ",", "3"}], "}"}]
}
],
"]"
}
],
":=",
"54654"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"2", ",", "2", ",", "2"}], "}"}]
}
],
"]"
}
],
":=",
"9104"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"0", ",", "8"}], "}"}]}
],
"]"
}
],
":=",
"25515"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"1", ",", "7"}], "}"}]}
],
"]"
}
],
":=",
"26670"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"2", ",", "6"}], "}"}]}
],
"]"
}
],
":=",
"26460"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"3", ",", "5"}], "}"}]}
],
"]"
}
],
":=",
"26670"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"4", ",", "4"}], "}"}]}
],
"]"
}
],
":=",
"13607"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"0", ",", RowBox[{"{", "10", "}"}]}],
"]"
}
],
":=",
"15120"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{
"{",
RowBox[
{
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0"
}
],
"}"
}
]
}
],
"]"
}
],
":=",
"16532"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{
"{",
RowBox[
{
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0"
}
],
"}"
}
]
}
],
"]"
}
],
":=",
"217395"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{
"{",
RowBox[
{
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0"
}
],
"}"
}
]
}
],
"]"
}
],
":=",
"3406747"
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"2", ",", RowBox[{"{", "0", "}"}]}],
"]"
}
],
"=",
"1"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"4", ",", RowBox[{"{", "0", "}"}]}],
"]"
}
],
"=",
"3"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"5", ",", RowBox[{"{", "1", "}"}]}],
"]"
}
],
"=",
"15"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"3", ",", RowBox[{"{", "1", "}"}]}],
"]"
}
],
"=",
"6"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"1", ",", RowBox[{"{", "1", "}"}]}],
"]"
}
],
"=",
"2"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"6", ",", RowBox[{"{", "2", "}"}]}],
"]"
}
],
"=",
"90"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"4", ",", RowBox[{"{", "2", "}"}]}],
"]"
}
],
"=",
"39"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"2", ",", RowBox[{"{", "2", "}"}]}],
"]"
}
],
"=",
"9"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"8", ",", RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]}
],
"]"
}
],
"=",
"315"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"6", ",", RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]}
],
"]"
}
],
"=",
"135"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"4", ",", RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]}
],
"]"
}
],
"=",
"33"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"2", ",", RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]}
],
"]"
}
],
"=",
"5"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"7", ",", RowBox[{"{", "3", "}"}]}],
"]"
}
],
"=",
"630"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"5", ",", RowBox[{"{", "3", "}"}]}],
"]"
}
],
"=",
"285"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"3", ",", RowBox[{"{", "3", "}"}]}],
"]"
}
],
"=",
"66"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"1", ",", RowBox[{"{", "3", "}"}]}],
"]"
}
],
"=",
"11"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"9", ",", RowBox[{"{", RowBox[{"0", ",", "1"}], "}"}]}
],
"]"
}
],
"=",
"5670"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"7", ",", RowBox[{"{", RowBox[{"0", ",", "1"}], "}"}]}
],
"]"
}
],
"=",
"2520"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"5", ",", RowBox[{"{", RowBox[{"0", ",", "1"}], "}"}]}
],
"]"
}
],
"=",
"600"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"3", ",", RowBox[{"{", RowBox[{"0", ",", "1"}], "}"}]}
],
"]"
}
],
"=",
"96"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"1", ",", RowBox[{"{", RowBox[{"0", ",", "1"}], "}"}]}
],
"]"
}
],
"=",
"14"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"8", ",", RowBox[{"{", "4", "}"}]}],
"]"
}
],
"=",
"5040"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"6", ",", RowBox[{"{", "4", "}"}]}],
"]"
}
],
"=",
"2340"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"4", ",", RowBox[{"{", "4", "}"}]}],
"]"
}
],
"=",
"549"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[{"2", ",", RowBox[{"{", "4", "}"}]}],
"]"
}
],
"=",
"86"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"10", ",", RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]}
],
"]"
}
],
"=",
"28350"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"8", ",", RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]}
],
"]"
}
],
"=",
"12915"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"6", ",", RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]}
],
"]"
}
],
"=",
"3060"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"4", ",", RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]}
],
"]"
}
],
"=",
"492"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"2", ",", RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]}
],
"]"
}
],
"=",
"62"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"10", ",", RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}]}
],
"]"
}
],
"=",
"56700"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"8", ",", RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}]}
],
"]"
}
],
"=",
"25830"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"6", ",", RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}]}
],
"]"
}
],
"=",
"6075"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"4", ",", RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}]}
],
"]"
}
],
"=",
"966"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{"2", ",", RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}]}
],
"]"
}
],
"=",
"119"
}
],
";"
}
],
"\[IndentingNewLine]"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"12",
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}]
}
],
"]"
}
],
"=",
"155925"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"10",
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}]
}
],
"]"
}
],
"=",
"70875"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"8",
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}]
}
],
"]"
}
],
"=",
"16695"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"6",
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}]
}
],
"]"
}
],
"=",
"2670"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"4",
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}]
}
],
"]"
}
],
"=",
"336"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxIndex",
"[",
RowBox[
{
"2",
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}]
}
],
"]"
}
],
"=",
"33"
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[{"0", ",", RowBox[{"{", "}"}]}],
"]"
}
],
"=",
"0"
}
],
";"
}
],
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[{"0", ",", RowBox[{"{", "0", "}"}]}],
"]"
}
],
"=",
"1"
}
],
";"
}
],
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]}
],
"]"
}
],
"=",
"4"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[{"0", ",", RowBox[{"{", "2", "}"}]}],
"]"
}
],
"=",
"3"
}
],
";"
}
],
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}]
}
],
"]"
}
],
"=",
"27"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"0", ",", "2"}], "}"}]}
],
"]"
}
],
"=",
"58"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"1", ",", "1"}], "}"}]}
],
"]"
}
],
"=",
"36"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[{"0", ",", RowBox[{"{", "4", "}"}]}],
"]"
}
],
"=",
"32"
}
],
";"
}
],
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}
]
}
],
"]"
}
],
"=",
"232"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "2"}], "}"}]
}
],
"]"
}
],
"=",
"967"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[
{
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "1", ",", "1"}], "}"}]
}
],
"]"
}
],
"=",
"1047"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"0", ",", "4"}], "}"}]}
],
"]"
}
],
"=",
"876"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"1", ",", "3"}], "}"}]}
],
"]"
}
],
"=",
"920"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[
{"0", ",", RowBox[{"{", RowBox[{"2", ",", "2"}], "}"}]}
],
"]"
}
],
"=",
"478"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[{"0", ",", RowBox[{"{", "6", "}"}]}],
"]"
}
],
"=",
"435"
}
],
";"
}
],
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{
"{",
RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}],
"}"
}
]
}
],
"]"
}
],
"=",
"2582"
}
],
";"
}
],
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{
"{",
RowBox[
{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}
],
"}"
}
]
}
],
"]"
}
],
"=",
"35090"
}
],
";"
}
],
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"MaxDualIndex",
"[",
RowBox[
{
"0",
",",
RowBox[
{
"{",
RowBox[
{
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0",
",",
"0"
}
],
"}"
}
]
}
],
"]"
}
],
"=",
"558323"
}
],
";"
}
],
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"MaxDualIndex", "[", RowBox[{"rank_", ",", "case_"}], "]"}
],
":=",
RowBox[
{
"Throw",
"[",
RowBox[
{
"Print",
"[",
RowBox[
{
"\"Dual case\"",
",",
" ",
"case",
",",
"\" and rank\"",
",",
"rank",
",",
"\" not included.\""
}
],
"]"
}
],
"]"
}
]
}
],
";"
}
]
}
]
}
]
],
"Input"
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["More on RInvs", "Subsection"],
Cell[
BoxData[
RowBox[
{
"(*",
" ",
RowBox[{"Added", " ", "rank", " ", "argument"}],
"*)"
}
]
],
"Input"
],
Cell[BoxData[""], "Input"],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"1", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"Map",
"[",
RowBox[
{
RowBox[
{
RowBox[
{"RInv", "[", RowBox[{"rank", ",", "case", ",", "#"}], "]"}
],
"&"
}
],
",",
RowBox[
{
"Range",
"[",
RowBox[
{"MaxIndex", "[", RowBox[{"rank", ",", "case"}], "]"}
],
"]"
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"1", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"Map",
"[",
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInv",
"[",
RowBox[{"rank", ",", "case", ",", "#"}],
"]"
}
],
"&"
}
],
",",
RowBox[
{
"Range",
"[",
RowBox[
{"MaxDualIndex", "[", RowBox[{"rank", ",", "case"}], "]"}
],
"]"
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"WInvs",
"[",
RowBox[{"1", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"WInvs",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"Map",
"[",
RowBox[
{
RowBox[
{
RowBox[
{"WInv", "[", RowBox[{"rank", ",", "case", ",", "#"}], "]"}
],
"&"
}
],
",",
RowBox[
{
"Range",
"[",
RowBox[
{"MaxIndex", "[", RowBox[{"rank", ",", "case"}], "]"}
],
"]"
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"DualWInvs",
"[",
RowBox[{"1", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"WInvs",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"Map",
"[",
RowBox[
{
RowBox[
{
RowBox[
{"WInv", "[", RowBox[{"rank", ",", "case", ",", "#"}], "]"}
],
"&"
}
],
",",
RowBox[
{
"Range",
"[",
RowBox[
{"MaxIndex", "[", RowBox[{"rank", ",", "case"}], "]"}
],
"]"
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["Dispatch Rules", "Subsection"],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[{"No", " ", "dim", " ", "added", " ", "free"}],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"DispatchRules",
"[",
RowBox[
{
"RInv",
",",
"step_",
",",
"rank_",
",",
"case_",
",",
"dim___"
}
],
"]"
}
],
":=",
RowBox[
{
"Block",
"[",
RowBox[
{
RowBox[{"{", "sigma", "}"}],
",",
RowBox[
{
RowBox[
{
"DispatchRules",
"[",
RowBox[
{"RInv", ",", "step", ",", "rank", ",", "case", ",", "dim"}
],
"]"
}
],
"=",
RowBox[
{
"Dispatch",
"[",
RowBox[
{
"RInvRules",
"[",
RowBox[{"step", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"DispatchRules",
"[",
RowBox[
{
"DualRInv",
",",
"step_",
",",
"rank_",
",",
"case_",
",",
"dim___"
}
],
"]"
}
],
":=",
RowBox[
{
"Block",
"[",
RowBox[
{
RowBox[{"{", "sigma", "}"}],
",",
RowBox[
{
RowBox[
{
"DispatchRules",
"[",
RowBox[
{
"DualRInv",
",",
"step",
",",
"rank",
",",
"case",
",",
"dim"
}
],
"]"
}
],
"=",
RowBox[
{
"Dispatch",
"[",
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"step", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"DispatchRules",
"[",
RowBox[
{
"WInv",
",",
"step_",
",",
"rank_",
",",
"case_",
",",
"dim___"
}
],
"]"
}
],
":=",
RowBox[
{
"Block",
"[",
RowBox[
{
RowBox[{"{", "sigma", "}"}],
",",
RowBox[
{
RowBox[
{
"DispatchRules",
"[",
RowBox[
{"WInv", ",", "step", ",", "rank", ",", "case", ",", "dim"}
],
"]"
}
],
"=",
RowBox[
{
"Dispatch",
"[",
RowBox[
{
"WInvRules",
"[",
RowBox[{"step", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"DispatchRules",
"[",
RowBox[
{
"DualWInv",
",",
"step_",
",",
"rank_",
",",
"case_",
",",
"dim___"
}
],
"]"
}
],
":=",
RowBox[
{
"Block",
"[",
RowBox[
{
RowBox[{"{", "sigma", "}"}],
",",
RowBox[
{
RowBox[
{
"DispatchRules",
"[",
RowBox[
{
"DualWInv",
",",
"step",
",",
"rank",
",",
"case",
",",
"dim"
}
],
"]"
}
],
"=",
RowBox[
{
"Dispatch",
"[",
RowBox[
{
"DualWInvRules",
"[",
RowBox[{"step", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell[
"Reading permutations for the invariants: step 1",
"Subsection"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"1", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[{"{", "result", "}"}],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[{"MaxIndex", "[", "case", "]"}],
";",
"\[IndentingNewLine]",
RowBox[
{
"Print",
"[",
RowBox[
{
"\"Reading InvRules for step 1, rank \"",
",",
"rank",
" ",
",",
"\" and case \"",
",",
"case"
}
],
"]"
}
],
";",
RowBox[
{
"result",
"=",
RowBox[
{
"Inner",
"[",
RowBox[
{
"Rule",
",",
RowBox[
{
"tmphead",
"@@",
RowBox[
{
"RInvs",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
]
}
],
",",
RowBox[
{
"tmphead",
"@@",
RowBox[
{
"ReadInvarPerms",
"[",
RowBox[
{
RowBox[
{
"$DataBaseDir",
"<>",
"\"1/\"",
"<>",
RowBox[
{
"filename",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
]
}
],
",",
"\"Maple\""
}
],
"]"
}
]
}
],
",",
"List"
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
],
",",
"result"
}
],
"]"
}
]
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"1", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[{"{", "result", "}"}],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[{"MaxIndex", "[", "case", "]"}],
";",
"\[IndentingNewLine]",
RowBox[
{
"Print",
"[",
RowBox[
{
"\"Reading DualInvRules for step 1, rank \"",
",",
"rank",
" ",
",",
"\" and case  \"",
",",
"case"
}
],
"]"
}
],
";",
RowBox[
{
"result",
"=",
RowBox[
{
"Inner",
"[",
RowBox[
{
"Rule",
",",
RowBox[
{
"tmphead",
"@@",
RowBox[
{
"DualRInvs",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
]
}
],
",",
RowBox[
{
"tmphead",
"@@",
RowBox[
{
"ReadInvarPerms",
"[",
RowBox[
{
RowBox[
{
"$DataBaseDir",
"<>",
"\"1/\"",
"<>",
RowBox[
{
"dualfilename",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
]
}
],
",",
"\"Maple\""
}
],
"]"
}
]
}
],
",",
"List"
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
],
",",
"result"
}
],
"]"
}
]
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"RInvRules",
"[",
RowBox[
{
"1",
",",
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]
}
],
"]"
}
]
],
"Input"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"Reading InvRules for step 1, rank \"",
"\[InvisibleSpace]",
"0",
"\[InvisibleSpace]",
"\" and case \"",
"\[InvisibleSpace]",
RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]
}
],
"Reading InvRules for step 1, rank "0" and case "{0, 0},
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
RowBox[
{
"{",
RowBox[
{
RowBox[
{
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"00,1\""
],
"\[Rule]",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"2", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"4", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"6", ",", "7"}], "}"}]
}
],
"}"
}
]
}
],
",",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"00,2\""
],
"\[Rule]",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"2", ",", "3", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"4", ",", "7", ",", "6"}], "}"}]
}
],
"}"
}
]
}
],
",",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"00,3\""
],
"\[Rule]",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"2", ",", "3", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"4", ",", "7"}], "}"}]
}
],
"}"
}
]
}
]
}
],
"}"
}
]
],
"Output"
]
},
Open
]
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"DualRInvRules",
"[",
RowBox[
{
"1",
",",
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]
}
],
"]"
}
]
],
"Input"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"Reading DualInvRules for step 1, rank \"",
"\[InvisibleSpace]",
"0",
"\[InvisibleSpace]",
"\" and case  \"",
"\[InvisibleSpace]",
RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]
}
],
SequenceForm[
"Reading DualInvRules for step 1, rank ",
0,
" and case  ",
{0, 0}
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
RowBox[
{
"{",
RowBox[
{
RowBox[
{
SubscriptBox[
TemplateBox[{"\"D\"", "\"0\""}, "Superscript"],
"\"00,1\""
],
"\[Rule]",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"2", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"4", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"6", ",", "7", ",", "9"}], "}"}],
",",
RowBox[{"{", RowBox[{"8", ",", "11", ",", "10"}], "}"}]
}
],
"}"
}
]
}
],
",",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"D\"", "\"0\""}, "Superscript"],
"\"00,2\""
],
"\[Rule]",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"2", ",", "3", ",", "5"}], "}"}],
",",
RowBox[
{"{", RowBox[{"4", ",", "7", ",", "9", ",", "6"}], "}"}
],
",",
RowBox[{"{", RowBox[{"8", ",", "11", ",", "10"}], "}"}]
}
],
"}"
}
]
}
],
",",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"D\"", "\"0\""}, "Superscript"],
"\"00,3\""
],
"\[Rule]",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"2", ",", "3", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"4", ",", "7", ",", "9"}], "}"}],
",",
RowBox[{"{", RowBox[{"8", ",", "11", ",", "10"}], "}"}]
}
],
"}"
}
]
}
],
",",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"D\"", "\"0\""}, "Superscript"],
"\"00,4\""
],
"\[Rule]",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"2", ",", "3", ",", "5"}], "}"}],
",",
RowBox[
{"{", RowBox[{"4", ",", "7", ",", "6", ",", "9"}], "}"}
],
",",
RowBox[{"{", RowBox[{"8", ",", "11", ",", "10"}], "}"}]
}
],
"}"
}
]
}
]
}
],
"}"
}
]
],
"Output"
]
},
Open
]
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"reversecycles",
"[",
RowBox[{"inv_", "\[Rule]", RowBox[{"{", "cycles__", "}"}]}],
"]"
}
],
":=",
RowBox[
{RowBox[{"Cycles", "[", "cycles", "]"}], "\[Rule]", "inv"}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"reversecycles",
"[",
RowBox[{"inv_", "->", RowBox[{"{", "}"}]}],
"]"
}
],
":=",
RowBox[
{
RowBox[{"Cycles", "[", RowBox[{"{", "}"}], "]"}],
"->",
"inv"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"DispatchRInvToPermRules",
"[",
RowBox[{"rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"DispatchRInvToPermRules",
"[",
RowBox[{"rank", ",", "case"}],
"]"
}
],
"=",
RowBox[
{
"Dispatch",
"[",
RowBox[
{
"RInvRules",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
],
"]"
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"DispatchPermToRInvRules",
"[",
RowBox[{"rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"DispatchPermToRInvRules",
"[",
RowBox[{"rank", ",", "case"}],
"]"
}
],
"=",
RowBox[
{
"Dispatch",
"[",
RowBox[
{
"reversecycles",
"/@",
RowBox[
{
"RInvRules",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
]
}
],
"]"
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"DispatchDualRInvToPermRules",
"[",
RowBox[{"rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"DispatchDualRInvToPermRules",
"[",
RowBox[{"rank", ",", "case"}],
"]"
}
],
"=",
RowBox[
{
"Dispatch",
"[",
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
],
"]"
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"DispatchPermToDualRInvRules",
"[",
RowBox[{"rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"DispatchPermToDualRInvRules",
"[",
RowBox[{"rank", ",", "case"}],
"]"
}
],
"=",
RowBox[
{
"Dispatch",
"[",
RowBox[
{
"reversecycles",
"/@",
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
]
}
],
"]"
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"WInvRules",
"[",
RowBox[{"1", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
],
"/.",
RowBox[{"RInv", "\[Rule]", "WInv"}]
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"DualWInvRules",
"[",
RowBox[{"1", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
],
"/.",
RowBox[{"DualRInv", "\[Rule]", "DualWInv"}]
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"WInvRules",
"[",
RowBox[
{
"1",
",",
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]
}
],
"]"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"{",
RowBox[
{
RowBox[
{
SubscriptBox[
TemplateBox[{"\"W\"", "\"0\""}, "Superscript"],
"\"00,1\""
],
"\[Rule]",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"2", ",", "3"}], "}"}],
",",
RowBox[{"{", RowBox[{"4", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"6", ",", "7"}], "}"}]
}
],
"}"
}
]
}
],
",",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"W\"", "\"0\""}, "Superscript"],
"\"00,2\""
],
"\[Rule]",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"2", ",", "3", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"4", ",", "7", ",", "6"}], "}"}]
}
],
"}"
}
]
}
],
",",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"W\"", "\"0\""}, "Superscript"],
"\"00,3\""
],
"\[Rule]",
RowBox[
{
"{",
RowBox[
{
RowBox[{"{", RowBox[{"2", ",", "3", ",", "5"}], "}"}],
",",
RowBox[{"{", RowBox[{"4", ",", "7"}], "}"}]
}
],
"}"
}
]
}
]
}
],
"}"
}
]
],
"Output"
]
},
Open
]
],
Cell["Examples with invariants", "Text"],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"Add",
" ",
"in",
" ",
"the",
" ",
"rest",
" ",
"of",
" ",
"the",
" ",
"rules",
" ",
"later"
}
],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"2", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"2", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"Complement",
"[",
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"First",
"/@",
RowBox[
{
"RInvRules",
"[",
RowBox[{"2", ",", "rank", ",", "case"}],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"2", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"2", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"Complement",
"[",
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"1", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"First",
"/@",
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"2", ",", "rank", ",", "case"}],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"2", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[{"{", "result", "}"}],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{"MaxIndex", "[", RowBox[{"rank", ",", "case"}], "]"}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"Print",
"[",
RowBox[
{
"\"Reading InvRules for step 2, rank \"",
",",
"rank",
",",
"\" and case \"",
",",
"case"
}
],
"]"
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"result",
"=",
RowBox[
{
"ReadInvarRules",
"[",
RowBox[
{
RowBox[
{
"$DataBaseDir",
"<>",
"\"2/\"",
"<>",
RowBox[
{
"filename",
"[",
RowBox[{"2", ",", "rank", ",", "case"}],
"]"
}
]
}
],
",",
"\"Mathematica\""
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"2", ",", "rank", ",", "case"}],
"]"
}
],
",",
"result"
}
],
"]"
}
]
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"2", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[{"{", "result", "}"}],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{"MaxDualIndex", "[", RowBox[{"rank", ",", "case"}], "]"}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"Print",
"[",
RowBox[
{
"\"Reading DualInvRules for step 2, rank \"",
",",
"rank",
",",
"\" and case \"",
",",
"case"
}
],
"]"
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"result",
"=",
RowBox[
{
"ReadInvarRules",
"[",
RowBox[
{
RowBox[
{
"$DataBaseDir",
"<>",
"\"2/\"",
"<>",
RowBox[
{
"dualfilename",
"[",
RowBox[{"2", ",", "rank", ",", "case"}],
"]"
}
]
}
],
",",
"\"Mathematica\""
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"2", ",", "rank", ",", "case"}],
"]"
}
],
",",
"result"
}
],
"]"
}
]
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"DualRInvRules",
"[",
RowBox[
{
"2",
",",
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]
}
],
"]"
}
]
],
"Input"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"Reading DualInvRules for step 2, rank \"",
"\[InvisibleSpace]",
"0",
"\[InvisibleSpace]",
"\" and case \"",
"\[InvisibleSpace]",
RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]
}
],
"Reading DualInvRules for step 2, rank "0" and case "{0, 0},
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
RowBox[
{
"{",
RowBox[
{
RowBox[
{
SubscriptBox[
TemplateBox[{"\"D\"", "\"0\""}, "Superscript"],
"\"00,1\""
],
"\[Rule]",
"0"
}
],
",",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"D\"", "\"0\""}, "Superscript"],
"\"00,3\""
],
"\[Rule]",
FractionBox[
SubscriptBox[
TemplateBox[{"\"D\"", "\"0\""}, "Superscript"],
"\"00,2\""
],
"2"
]
}
],
",",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"D\"", "\"0\""}, "Superscript"],
"\"00,4\""
],
"\[Rule]",
FractionBox[
SubscriptBox[
TemplateBox[{"\"D\"", "\"0\""}, "Superscript"],
"\"00,2\""
],
"4"
]
}
]
}
],
"}"
}
]
],
"Output"
]
},
Open
]
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"RInvs",
"[",
RowBox[{"2", ",", "4", ",", RowBox[{"{", "2", "}"}]}],
"]"
}
]
],
"Input"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"Reading InvRules for step 2, rank \"",
"\[InvisibleSpace]",
"4",
"\[InvisibleSpace]",
"\" and case \"",
"\[InvisibleSpace]",
RowBox[{"{", "2", "}"}]
}
],
"Reading InvRules for step 2, rank "4" and case "{2},
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
RowBox[
{
"{",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,1\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,2\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,4\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,5\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,6\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,7\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,8\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,9\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,10\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,11\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,16\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,17\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,18\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,19\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,20\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,21\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,22\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,23\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,28\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,29\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,30\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,31\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,32\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,33\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,34\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,35\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,36\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,37\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,38\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,39\""
]
}
],
"}"
}
]
],
"Output"
]
},
Open
]
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"RInvRules",
"[",
RowBox[
{
"2",
",",
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]
}
],
"]"
}
]
],
"Input"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"Reading InvRules for step 2, rank \"",
"\[InvisibleSpace]",
"0",
"\[InvisibleSpace]",
"\" and case \"",
"\[InvisibleSpace]",
RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]
}
],
"Reading InvRules for step 2, rank "0" and case "{0, 0},
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
RowBox[
{
"{",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"00,3\""
],
"\[Rule]",
FractionBox[
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"00,2\""
],
"2"
]
}
],
"}"
}
]
],
"Output"
]
},
Open
]
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"3", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"3", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"Complement",
"[",
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"2", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"First",
"/@",
RowBox[
{
"RInvRules",
"[",
RowBox[{"3", ",", "rank", ",", "case"}],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"3", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"3", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"Complement",
"[",
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"2", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"First",
"/@",
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"3", ",", "rank", ",", "case"}],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"3", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[{"{", "result", "}"}],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{"MaxIndex", "[", RowBox[{"rank", ",", "case"}], "]"}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"Print",
"[",
RowBox[
{
"\"Reading InvRules for step 3, rank \"",
",",
"rank",
",",
"\" and case \"",
",",
"case"
}
],
"]"
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"result",
"=",
RowBox[
{
"ReadInvarRules",
"[",
RowBox[
{
RowBox[
{
"$DataBaseDir",
"<>",
"\"3/\"",
"<>",
RowBox[
{
"filename",
"[",
RowBox[{"3", ",", "rank", ",", "case"}],
"]"
}
]
}
],
",",
"\"Mathematica\""
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"3", ",", "rank", ",", "case"}],
"]"
}
],
",",
"result"
}
],
"]"
}
]
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"3", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[{"{", "result", "}"}],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{"MaxDualIndex", "[", RowBox[{"rank", ",", "case"}], "]"}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"Print",
"[",
RowBox[
{
"\"Reading InvRules for step 3, rank \"",
",",
"rank",
",",
"\" and case \"",
",",
"case"
}
],
"]"
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"result",
"=",
RowBox[
{
"ReadInvarRules",
"[",
RowBox[
{
RowBox[
{
"$DataBaseDir",
"<>",
"\"3/\"",
"<>",
RowBox[
{
"dualfilename",
"[",
RowBox[{"3", ",", "rank", ",", "case"}],
"]"
}
]
}
],
",",
"\"Mathematica\""
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"3", ",", "rank", ",", "case"}],
"]"
}
],
",",
"result"
}
],
"]"
}
]
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"RInvs",
"[",
RowBox[{"3", ",", "4", ",", RowBox[{"{", "2", "}"}]}],
"]"
}
]
],
"Input"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"Reading InvRules for step 3, rank \"",
"\[InvisibleSpace]",
"4",
"\[InvisibleSpace]",
"\" and case \"",
"\[InvisibleSpace]",
RowBox[{"{", "2", "}"}]
}
],
"Reading InvRules for step 3, rank "4" and case "{2},
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
RowBox[
{
"{",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,1\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,2\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,4\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,6\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,8\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,16\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,17\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,20\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,21\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,22\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,28\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,29\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,30\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,31\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,32\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,36\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,37\""
]
}
],
"}"
}
]
],
"Output"
]
},
Open
]
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"4", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"4", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"Complement",
"[",
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"3", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"First",
"/@",
RowBox[
{
"RInvRules",
"[",
RowBox[{"4", ",", "rank", ",", "case"}],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"4", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"4", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"Complement",
"[",
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"3", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"First",
"/@",
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"4", ",", "rank", ",", "case"}],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"4", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[{"{", "result", "}"}],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[{"MaxIndex", "[", "case", "]"}],
";",
"\[IndentingNewLine]",
RowBox[
{
"Print",
"[",
RowBox[
{
"\"Reading InvRules for step 4, rank \"",
",",
"rank",
",",
"\" and case \"",
",",
"case"
}
],
"]"
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"result",
"=",
RowBox[
{
"ReadInvarRules",
"[",
RowBox[
{
RowBox[
{
"$DataBaseDir",
"<>",
"\"4/\"",
"<>",
RowBox[
{
"filename",
"[",
RowBox[{"4", ",", "rank", ",", "case"}],
"]"
}
]
}
],
",",
"\"Mathematica\""
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"4", ",", "rank", ",", "case"}],
"]"
}
],
",",
"result"
}
],
"]"
}
]
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"4", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[{"{", "result", "}"}],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{"MaxDualIndex", "[", RowBox[{"rank", ",", "case"}], "]"}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"Print",
"[",
RowBox[
{
"\"Reading InvRules for step 4, rank \"",
",",
"rank",
",",
"\" and case \"",
",",
"case"
}
],
"]"
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"result",
"=",
RowBox[
{
"ReadInvarRules",
"[",
RowBox[
{
RowBox[
{
"$DataBaseDir",
"<>",
"\"4/\"",
"<>",
RowBox[
{
"dualfilename",
"[",
RowBox[{"4", ",", "rank", ",", "case"}],
"]"
}
]
}
],
",",
"\"Mathematica\""
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"4", ",", "rank", ",", "case"}],
"]"
}
],
",",
"result"
}
],
"]"
}
]
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"RInvs",
"[",
RowBox[{"4", ",", "4", ",", RowBox[{"{", "2", "}"}]}],
"]"
}
]
],
"Input"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"Reading InvRules for step 4, rank \"",
"\[InvisibleSpace]",
"4",
"\[InvisibleSpace]",
"\" and case \"",
"\[InvisibleSpace]",
RowBox[{"{", "2", "}"}]
}
],
"Reading InvRules for step 4, rank "4" and case "{2},
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
RowBox[
{
"{",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,28\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,29\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,30\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,31\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,36\""
],
",",
SubscriptBox[
TemplateBox[{"\"I\"", "\"4\""}, "Superscript"],
"\"2,37\""
]
}
],
"}"
}
]
],
"Output"
]
},
Open
]
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"5", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"5", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"Complement",
"[",
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"4", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"First",
"/@",
RowBox[
{
"RInvRules",
"[",
RowBox[{"5", ",", "rank", ",", "case"}],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["Step 5 dim dep rules", "Subsection"],
Cell[BoxData[""], "Input"],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"5", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
"RInvs",
"[",
RowBox[{"5", ",", "rank", ",", "case", ",", "$DefaultDim"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"5", ",", "rank_", ",", "case_", ",", "dim_"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"5", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
],
",",
RowBox[
{
"Complement",
"[",
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"4", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"First",
"/@",
RowBox[
{
"RInvRules",
"[",
RowBox[{"5", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"5", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
"DualRInvs",
"[",
RowBox[{"5", ",", "rank", ",", "case", ",", "$DefaultDim"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"5", ",", "rank_", ",", "case_", ",", "dim_"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"5", ",", "rank", ",", " ", "case", ",", "dim"}],
"]"
}
],
",",
RowBox[
{
"Complement",
"[",
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"4", ",", "rank", ",", "case"}],
"]"
}
],
",",
RowBox[
{
"First",
"/@",
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"5", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"5", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"RInvRules",
"[",
RowBox[{"5", ",", "rank", ",", "case", ",", "$DefaultDim"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"5", ",", "rank_", ",", "case_List", ",", "dim_"}],
"]"
}
],
":=",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[{"{", "result", "}"}],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{"MaxIndex", "[", RowBox[{"rank", ",", "case"}], "]"}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"If",
"[",
RowBox[
{
RowBox[{"rank", ">", "0"}],
",",
RowBox[{RowBox[{"result", "=", RowBox[{"{", "}"}]}], ";"}],
" ",
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"Print",
"[",
RowBox[
{
"\"Reading InvRules for step 5, rank \"",
",",
"rank",
",",
"\", case \"",
"  ",
",",
"case",
",",
"  ",
"\" and dimension \"",
",",
"dim"
}
],
"]"
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"result",
"=",
RowBox[
{
"ReadInvarRules",
"[",
RowBox[
{
RowBox[
{
"$DataBaseDir",
"<>",
"\"5_\"",
"<>",
RowBox[{"ToString", "[", "dim", "]"}],
"<>",
"\"/\"",
"<>",
RowBox[
{
"filename",
"[",
RowBox[{"5", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
]
}
],
",",
"\"Mathematica\""
}
],
"]"
}
]
}
]
}
]
}
],
"]"
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"5", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
],
",",
"result"
}
],
"]"
}
]
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"5", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"5", ",", "rank", ",", "case", ",", "$DefaultDim"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"5", ",", "rank_", ",", "case_List", ",", "dim_"}],
"]"
}
],
":=",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[{"{", "result", "}"}],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{"MaxDualIndex", "[", RowBox[{"rank", ",", "case"}], "]"}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"If",
"[",
RowBox[
{
RowBox[{"rank", ">", "0"}],
",",
RowBox[{RowBox[{"result", "=", RowBox[{"{", "}"}]}], ";"}],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"Print",
"[",
RowBox[
{
"\"Reading InvRules for step 5, rank \"",
",",
"rank",
",",
"\" and case \"",
",",
"case"
}
],
"]"
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"result",
"=",
RowBox[
{
"ReadInvarRules",
"[",
RowBox[
{
RowBox[
{
"$DataBaseDir",
"<>",
"\"5_\"",
"<>",
RowBox[{"ToString", "[", "dim", "]"}],
"<>",
"\"/\"",
"<>",
RowBox[
{
"dualfilename",
"[",
RowBox[{"5", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
]
}
],
",",
"\"Mathematica\""
}
],
"]"
}
]
}
]
}
]
}
],
"]"
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"DualRInvRules",
"[",
RowBox[{"5", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
],
",",
"result"
}
],
"]"
}
]
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"RInvRules",
"[",
RowBox[
{
"5",
",",
"0",
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}
]
}
],
"]"
}
]
],
"Input"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"Reading InvRules for step 5, rank \"",
"\[InvisibleSpace]",
"0",
"\[InvisibleSpace]",
"\", case \"",
"\[InvisibleSpace]",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}
],
"\[InvisibleSpace]",
"\" and dimension \"",
"\[InvisibleSpace]",
"4"
}
],
SequenceForm[
"Reading InvRules for step 5, rank ",
0,
", case ",
{0, 0, 1, 1},
" and dimension ",
4
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
TagBox[
FrameBox[
GridBox[
{
{
ItemBox[
TagBox[
RowBox[
{
"{",
RowBox[
{
RowBox[
{
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"0011,22\""
],
"\[Rule]",
RowBox[
{
TemplateBox[{"42"}, "OutputSizeLimit`Skeleton"],
"+",
RowBox[
{
"2",
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"0011,21\""
]
}
]
}
]
}
],
",",
TemplateBox[{"116"}, "OutputSizeLimit`Skeleton"],
",",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"0011,1715\""
],
"\[Rule]",
RowBox[
{
RowBox[
{
RowBox[{"-", FractionBox["293", "96"]}],
" ",
SubsuperscriptBox[
TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"],
"\"0,1\"",
"2"
],
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"11,1\""
]
}
],
"+",
TemplateBox[{"139"}, "OutputSizeLimit`Skeleton"],
"+",
FractionBox[
TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"],
"4"
]
}
]
}
]
}
],
"}"
}
],
Short[#1, 5] &
],
BaseStyle -> {Deployed -> False},
StripOnInput -> False
]
},
{
GridBox[
{
{
PaneBox[
TagBox[
TooltipBox[
StyleBox[
StyleBox[
DynamicBox[
ToBoxes[
FEPrivate`FrontEndResource[
"FEStrings",
"sizeBriefExplanation"
],
StandardForm
],
ImageSizeCache -> {107.0, {4.0, 15.0}}
],
StripOnInput -> False,
DynamicUpdating -> True,
LineSpacing -> {1, 2},
LineIndent -> 0,
LinebreakAdjustments -> {1.0, 100, 0, 0, 0}
],
"OSLText",
StripOnInput -> False
],
StyleBox[
DynamicBox[
ToBoxes[
FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"],
StandardForm
]
],
DynamicUpdating -> True,
LineIndent -> 0,
LinebreakAdjustments -> {1.0, 100, 0, 0, 0},
LineSpacing -> {1, 2},
StripOnInput -> False
]
],
Function[
Annotation[
#1,
Style[
Dynamic[
FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]
],
DynamicUpdating -> True,
LineIndent -> 0,
LinebreakAdjustments -> {1.0, 100, 0, 0, 0},
LineSpacing -> {1, 2}
],
"Tooltip"
]
]
],
Alignment -> Center,
BaselinePosition -> Baseline,
ImageSize -> {Automatic, {25, Full}}
],
ButtonBox[
PaneSelectorBox[
{
False ->
StyleBox[
StyleBox[
DynamicBox[
ToBoxes[
FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"],
StandardForm
],
ImageSizeCache -> {93.0, {1.0, 15.0}}
],
StripOnInput -> False,
DynamicUpdating -> True,
LineSpacing -> {1, 2},
LineIndent -> 0,
LinebreakAdjustments -> {1.0, 100, 0, 0, 0}
],
"OSLControl",
StripOnInput -> False
],
True ->
StyleBox[
StyleBox[
DynamicBox[
ToBoxes[
FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"],
StandardForm
]
],
StripOnInput -> False,
DynamicUpdating -> True,
LineSpacing -> {1, 2},
LineIndent -> 0,
LinebreakAdjustments -> {1.0, 100, 0, 0, 0}
],
"OSLControlActive",
StripOnInput -> False
]
},
Dynamic[CurrentValue["MouseOver"]],
Alignment -> Center,
FrameMargins -> 0,
ImageSize -> {Automatic, {25, Full}}
],
Appearance -> None,
BaselinePosition -> Baseline,
ButtonFunction :>
OutputSizeLimit`ButtonFunction[
OutputSizeLimit`Defer,
363,
18545010503808907945,
5 / 2
],
Enabled -> True,
Evaluator -> Automatic,
Method -> "Queued"
],
ButtonBox[
PaneSelectorBox[
{
False ->
StyleBox[
StyleBox[
DynamicBox[
ToBoxes[
FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"],
StandardForm
],
ImageSizeCache -> {104.0, {1.0, 15.0}}
],
StripOnInput -> False,
DynamicUpdating -> True,
LineSpacing -> {1, 2},
LineIndent -> 0,
LinebreakAdjustments -> {1.0, 100, 0, 0, 0}
],
"OSLControl",
StripOnInput -> False
],
True ->
StyleBox[
StyleBox[
DynamicBox[
ToBoxes[
FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"],
StandardForm
]
],
StripOnInput -> False,
DynamicUpdating -> True,
LineSpacing -> {1, 2},
LineIndent -> 0,
LinebreakAdjustments -> {1.0, 100, 0, 0, 0}
],
"OSLControlActive",
StripOnInput -> False
]
},
Dynamic[CurrentValue["MouseOver"]],
Alignment -> Center,
FrameMargins -> 0,
ImageSize -> {Automatic, {25, Full}}
],
Appearance -> None,
BaselinePosition -> Baseline,
ButtonFunction :>
OutputSizeLimit`ButtonFunction[
OutputSizeLimit`Defer,
363,
18545010503808907945,
5 * 2
],
Enabled -> True,
Evaluator -> Automatic,
Method -> "Queued"
],
ButtonBox[
PaneSelectorBox[
{
False ->
StyleBox[
StyleBox[
DynamicBox[
ToBoxes[
FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"],
StandardForm
],
ImageSizeCache -> {77.0, {1.0, 15.0}}
],
StripOnInput -> False,
DynamicUpdating -> True,
LineSpacing -> {1, 2},
LineIndent -> 0,
LinebreakAdjustments -> {1.0, 100, 0, 0, 0}
],
"OSLControl",
StripOnInput -> False
],
True ->
StyleBox[
StyleBox[
DynamicBox[
ToBoxes[
FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"],
StandardForm
]
],
StripOnInput -> False,
DynamicUpdating -> True,
LineSpacing -> {1, 2},
LineIndent -> 0,
LinebreakAdjustments -> {1.0, 100, 0, 0, 0}
],
"OSLControlActive",
StripOnInput -> False
]
},
Dynamic[CurrentValue["MouseOver"]],
Alignment -> Center,
FrameMargins -> 0,
ImageSize -> {Automatic, {25, Full}}
],
Appearance -> None,
BaselinePosition -> Baseline,
ButtonFunction :>
OutputSizeLimit`ButtonFunction[
OutputSizeLimit`Defer,
363,
18545010503808907945,
Infinity
],
Enabled -> True,
Evaluator -> Automatic,
Method -> "Queued"
],
ButtonBox[
PaneSelectorBox[
{
False ->
StyleBox[
StyleBox[
DynamicBox[
ToBoxes[
FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"],
StandardForm
],
ImageSizeCache -> {135.0, {1.0, 16.0}}
],
StripOnInput -> False,
DynamicUpdating -> True,
LineSpacing -> {1, 2},
LineIndent -> 0,
LinebreakAdjustments -> {1.0, 100, 0, 0, 0}
],
"OSLControl",
StripOnInput -> False
],
True ->
StyleBox[
StyleBox[
DynamicBox[
ToBoxes[
FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"],
StandardForm
]
],
StripOnInput -> False,
DynamicUpdating -> True,
LineSpacing -> {1, 2},
LineIndent -> 0,
LinebreakAdjustments -> {1.0, 100, 0, 0, 0}
],
"OSLControlActive",
StripOnInput -> False
]
},
Dynamic[CurrentValue["MouseOver"]],
Alignment -> Center,
FrameMargins -> 0,
ImageSize -> {Automatic, {25, Full}}
],
Appearance -> None,
BaselinePosition -> Baseline,
ButtonFunction :>
FrontEndExecute[
{
FrontEnd`SetOptions[
FrontEnd`$FrontEnd,
FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}
],
FrontEnd`FrontEndToken["PreferencesDialog"]
}
],
Evaluator -> None,
Method -> "Preemptive"
]
}
},
AutoDelete -> False,
FrameStyle -> GrayLevel[0.85],
GridBoxDividers -> {"Columns" -> {False, {True}}},
GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}}}
]
}
},
DefaultBaseStyle -> "Column",
GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
GridBoxDividers -> {"Columns" -> {{False}}, "Rows" -> {{False}}},
GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.0}}},
GridBoxSpacings -> {
"Columns" -> {Offset[0.28], {Offset[0.56]}, Offset[0.28]},
"Rows" -> {Offset[0.2], Offset[1.2], {Offset[0.4]}, Offset[0.2]}
}
],
BaseStyle -> "OutputSizeLimit",
FrameMargins -> {{12, 12}, {0, 15}},
FrameStyle -> GrayLevel[0.85],
RoundingRadius -> 5,
StripOnInput -> False
],
Deploy,
DefaultBaseStyle -> "Deploy"
],
If[ 18545010503808907945 === $SessionID,
Out[363],
Message[MessageName[Syntax, "noinfoker"]];
Missing["NotAvailable"];
]
]
],
"Output"
]
},
Open
]
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"RInvRules",
"[",
RowBox[
{
"5",
",",
"0",
",",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}]
}
],
"]"
}
]
],
"Input"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"Reading InvRules for step 5, rank \"",
"\[InvisibleSpace]",
"0",
"\[InvisibleSpace]",
"\", case \"",
"\[InvisibleSpace]",
RowBox[{"{", RowBox[{"0", ",", "0", ",", "0"}], "}"}],
"\[InvisibleSpace]",
"\" and dimension \"",
"\[InvisibleSpace]",
"4"
}
],
SequenceForm[
"Reading InvRules for step 5, rank ",
0,
", case ",
{0, 0, 0},
" and dimension ",
4
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
RowBox[
{
"{",
RowBox[
{
RowBox[
{
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"000,3\""
],
"\[Rule]",
RowBox[
{
RowBox[
{
FractionBox["1", "4"],
" ",
SubsuperscriptBox[
RowBox[
{"(", TemplateBox[{"\"I\"", "\"0\""}, "Superscript"], ")"}
],
"\"0,1\"",
"3"
]
}
],
"-",
RowBox[
{
"2",
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"0,1\""
],
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"00,1\""
]
}
],
"+",
RowBox[
{
FractionBox["1", "4"],
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"0,1\""
],
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"00,2\""
]
}
],
"-",
RowBox[
{
"2",
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"000,1\""
]
}
],
"+",
RowBox[
{
"2",
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"000,2\""
]
}
]
}
]
}
],
",",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"000,8\""
],
"\[Rule]",
RowBox[
{
RowBox[
{
RowBox[{"-", FractionBox["5", "8"]}],
" ",
SubsuperscriptBox[
RowBox[
{"(", TemplateBox[{"\"I\"", "\"0\""}, "Superscript"], ")"}
],
"\"0,1\"",
"3"
]
}
],
"+",
RowBox[
{
FractionBox["9", "2"],
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"0,1\""
],
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"00,1\""
]
}
],
"-",
RowBox[
{
FractionBox["3", "8"],
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"0,1\""
],
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"00,2\""
]
}
],
"+",
RowBox[
{
"4",
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"000,1\""
]
}
],
"-",
RowBox[
{
"3",
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"000,2\""
]
}
],
"+",
FractionBox[
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"000,5\""
],
"2"
]
}
]
}
]
}
],
"}"
}
]
],
"Output"
]
},
Open
]
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"6", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
"RInvs",
"[",
RowBox[{"6", ",", "rank", ",", "case", ",", "$DefaultDim"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"6", ",", "rank_", ",", "case_", ",", "dim_"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"6", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
],
",",
RowBox[
{
"Complement",
"[",
RowBox[
{
RowBox[
{
"RInvs",
"[",
RowBox[{"5", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
],
",",
RowBox[
{
"First",
"/@",
RowBox[
{
"RInvRules",
"[",
RowBox[{"6", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"6", ",", "rank_", ",", "case_"}],
"]"
}
],
":=",
RowBox[
{
"DualRInvs",
"[",
RowBox[{"6", ",", "rank", ",", "case", ",", "$DefaultDim"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"6", ",", "rank_", ",", "case_", ",", "dim_"}],
"]"
}
],
":=",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"DualRInvs",
"[",
RowBox[{"6", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
],
",",
RowBox[
{
"DualRInvs",
"[",
RowBox[{"5", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"6", ",", "rank_", ",", "case_List"}],
"]"
}
],
":=",
RowBox[
{
"RInvRules",
"[",
RowBox[{"6", ",", "rank", ",", "case", ",", "$DefaultDim"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"6", ",", "rank_", ",", "case_List", ",", "dim_"}],
"]"
}
],
":=",
RowBox[
{
"Block",
"[",
RowBox[
{
RowBox[{"{", "sigma", "}"}],
",",
"\[IndentingNewLine]",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[{"{", "result", "}"}],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{"MaxIndex", "[", RowBox[{"rank", ",", "case"}], "]"}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"If",
"[",
RowBox[
{
RowBox[{"rank", ">", "0"}],
",",
RowBox[{RowBox[{"result", "=", RowBox[{"{", "}"}]}], ";"}],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"Print",
"[",
RowBox[
{
"\"Reading InvRules for step 6, rank \"",
",",
"rank",
",",
"\", case \"",
",",
"case",
",",
"\" and dimension \"",
",",
"dim"
}
],
"]"
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"result",
"=",
RowBox[
{
"ReadInvarRules",
"[",
RowBox[
{
RowBox[
{
"$DataBaseDir",
"<>",
"\"6_\"",
"<>",
RowBox[{"ToString", "[", "dim", "]"}],
"<>",
"\"/\"",
"<>",
RowBox[
{
"filename",
"[",
RowBox[{"6", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
]
}
],
",",
"\"Mathematica\""
}
],
"]"
}
]
}
]
}
]
}
],
"]"
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"ProtSet",
"[",
RowBox[
{
RowBox[
{
"RInvRules",
"[",
RowBox[{"6", ",", "rank", ",", "case", ",", "dim"}],
"]"
}
],
",",
"result"
}
],
"]"
}
]
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"RInvRules",
"[",
RowBox[
{
"6",
",",
"0",
",",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}
]
}
],
"]"
}
]
],
"Input"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"Reading InvRules for step 6, rank \"",
"\[InvisibleSpace]",
"0",
"\[InvisibleSpace]",
"\", case \"",
"\[InvisibleSpace]",
RowBox[
{"{", RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}
],
"\[InvisibleSpace]",
"\" and dimension \"",
"\[InvisibleSpace]",
"4"
}
],
SequenceForm[
"Reading InvRules for step 6, rank ",
0,
", case ",
{0, 0, 0, 0},
" and dimension ",
4
],
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
RowBox[
{
"{",
RowBox[
{
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"0000,21\""
],
"\[Rule]",
RowBox[
{
RowBox[
{
FractionBox["1", "16"],
" ",
"sigma",
" ",
SubsuperscriptBox[
RowBox[
{"(", TemplateBox[{"\"D\"", "\"0\""}, "Superscript"], ")"}
],
"\"00,2\"",
"2"
]
}
],
"-",
RowBox[
{
FractionBox["5", "12"],
" ",
SubsuperscriptBox[
RowBox[
{"(", TemplateBox[{"\"I\"", "\"0\""}, "Superscript"], ")"}
],
"\"0,1\"",
"4"
]
}
],
"+",
RowBox[
{
"4",
" ",
SubsuperscriptBox[
RowBox[
{"(", TemplateBox[{"\"I\"", "\"0\""}, "Superscript"], ")"}
],
"\"0,1\"",
"2"
],
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"00,1\""
]
}
],
"-",
RowBox[
{
"2",
" ",
SubsuperscriptBox[
RowBox[
{"(", TemplateBox[{"\"I\"", "\"0\""}, "Superscript"], ")"}
],
"\"00,1\"",
"2"
]
}
],
"-",
RowBox[
{
FractionBox["1", "2"],
" ",
SubsuperscriptBox[
RowBox[
{"(", TemplateBox[{"\"I\"", "\"0\""}, "Superscript"], ")"}
],
"\"0,1\"",
"2"
],
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"00,2\""
]
}
],
"+",
RowBox[
{
FractionBox["1", "4"],
" ",
SubsuperscriptBox[
RowBox[
{"(", TemplateBox[{"\"I\"", "\"0\""}, "Superscript"], ")"}
],
"\"00,2\"",
"2"
]
}
],
"-",
RowBox[
{
"8",
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"0,1\""
],
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"000,2\""
]
}
],
"+",
RowBox[
{
FractionBox["2", "3"],
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"0,1\""
],
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"000,5\""
]
}
],
"-",
RowBox[
{
"4",
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"0000,1\""
]
}
],
"+",
RowBox[
{
"4",
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"0000,5\""
]
}
],
"+",
RowBox[
{
"8",
" ",
SubscriptBox[
TemplateBox[{"\"I\"", "\"0\""}, "Superscript"],
"\"0000,7\""
]
}
]
}
]
}
],
"}"
}
]
],
"Output"
]
},
Open
]
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["The ten main functions", "Section"],
Cell[
CellGroupData[
{
Cell["InvSimplify", "Subsection"],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[{"InvSimplify", "[", "expr_", "]"}],
":=",
RowBox[
{
"InvSimplify",
"[",
RowBox[{"expr", ",", "$InvSimplifyLevel"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"InvSimplify", "[", RowBox[{"expr_", ",", "1"}], "]"}
],
":=",
"expr"
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvSimplify", "[", RowBox[{"expr_", ",", "step_"}], "]"}
],
":=",
RowBox[
{
"Expand",
"[",
RowBox[
{
"expr",
"/.",
RowBox[
{
"{",
RowBox[
{
RowBox[
{
"inv",
":",
RowBox[
{
RowBox[
{
RowBox[{"(", RowBox[{"RInv", "|", "WInv"}], ")"}],
"[",
RowBox[{"metric_", ",", "Inds_IndexList"}],
"]"
}
],
"[",
RowBox[{"rank_", ",", "_", ",", "_"}],
"]"
}
]
}
],
"\[RuleDelayed]",
RowBox[
{
"Block",
"[",
RowBox[
{
RowBox[
{
"{",
RowBox[
{
RowBox[
{
"dim",
"=",
RowBox[
{
"DimOfVBundle",
"@",
RowBox[{"VBundleOfMetric", "@", "metric"}]
}
]
}
],
",",
RowBox[
{
"sigma",
"=",
RowBox[{"SignDetOfMetric", "[", "metric", "]"}]
}
],
",",
RowBox[{"inds", "=", "Inds"}]
}
],
"}"
}
],
",",
RowBox[
{
"InvSimplify1",
"[",
RowBox[{"inv", ",", "step", ",", "dim"}],
"]"
}
]
}
],
"]"
}
]
}
],
" ",
"}"
}
]
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"SetNumberOfArguments",
"[",
RowBox[
{
"InvSimplify",
",",
RowBox[{"{", RowBox[{"1", ",", "2"}], "}"}]
}
],
"]"
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"InvSimplify1",
"[",
RowBox[{"inv_", ",", "1", ",", "_"}],
"]"
}
],
":=",
"inv"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"InvSimplify1",
"[",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[{"(", RowBox[{"DualRInv", "|", "DualWInv"}], ")"}],
"[",
RowBox[{"_", ",", "_"}],
"]"
}
],
"[",
RowBox[{"_", ",", "_", ",", "_"}],
"]"
}
],
",",
"_",
",",
"dim_Integer"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"Print",
"[",
"\"Duals are only handled in dimension 4.\"",
"]"
}
],
"/;",
RowBox[{"dim", "=!=", "4"}]
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"InvSimplify1",
"[",
RowBox[
{"_", ",", RowBox[{"5", "|", "6"}], ",", "dim_Integer"}
],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"Print",
"[",
"\"Levels 5 and 6 of simplication are only possible in dimension 4.\"",
"]"
}
],
"/;",
RowBox[{"dim", "=!=", "4"}]
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"InvSimplify1",
"[",
RowBox[
{
RowBox[
{
"inv",
":",
RowBox[
{
RowBox[
{"_", "[", RowBox[{"_", ",", "inds_IndexList"}], "]"}
],
"[",
RowBox[{"_", ",", "_", ",", "_"}],
"]"
}
]
}
],
",",
RowBox[
{
"step",
":",
RowBox[
{
"(",
RowBox[{"2", "|", "3", "|", "4", "|", "5", "|", "6"}],
")"
}
]
}
],
",",
"_"
}
],
"]"
}
],
":=",
RowBox[
{
"Expand",
"[",
RowBox[
{
RowBox[
{
"InvSimplify56",
"[",
RowBox[
{
RowBox[
{"InvSimplify234", "[", RowBox[{"inv", ",", "step"}], "]"}
],
",",
"step"
}
],
"]"
}
],
"/.",
RowBox[
{
"{",
RowBox[
{
RowBox[
{
"RInv",
"\[Rule]",
RowBox[{"RInv", "[", RowBox[{"metric", ",", "inds"}], "]"}]
}
],
",",
RowBox[
{
"DualRInv",
"\[Rule]",
RowBox[
{"DualRInv", "[", RowBox[{"metric", ",", "inds"}], "]"}
]
}
],
",",
RowBox[
{
"WInv",
"\[Rule]",
RowBox[{"WInv", "[", RowBox[{"metric", ",", "inds"}], "]"}]
}
],
",",
RowBox[
{
"DualWInv",
"\[Rule]",
RowBox[
{"DualWInv", "[", RowBox[{"metric", ",", "inds"}], "]"}
]
}
]
}
],
"}"
}
]
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"InvSimplify1",
"[",
RowBox[{"inv_", ",", "step_", ",", "dim_"}],
"]"
}
],
":=",
RowBox[
{
"Print",
"[",
RowBox[
{"\"Invalid level of simplification: \"", ",", "step"}
],
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"InvSimplify234",
"[",
RowBox[
{
RowBox[
{
RowBox[
{
"RInv",
"[",
RowBox[{"metric_", ",", "indexlist_IndexList"}],
"]"
}
],
"[",
RowBox[{"rank_", ",", "case_", ",", "count_"}],
"]"
}
],
",",
"step_"
}
],
"]"
}
],
":=",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[
{
"{",
RowBox[
{
RowBox[{"inds", "=", "indexlist"}],
",",
RowBox[
{
"newexpr",
"=",
RowBox[
{
"RInv",
"[",
RowBox[{"rank", ",", "case", ",", "count"}],
"]"
}
]
}
]
}
],
"}"
}
],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"If",
"[",
RowBox[
{
RowBox[
{
"FreeQ",
"[",
RowBox[
{
RowBox[
{
"RInvs",
"[",
" ",
RowBox[{"step", ",", "rank", ",", "case"}],
"]"
}
],
",",
"newexpr"
}
],
"]"
}
],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"newexpr",
"=",
RowBox[
{
"newexpr",
"/.",
RowBox[
{
"DispatchRules",
"[",
RowBox[{"RInv", ",", "2", ",", "rank", ",", "case"}],
"]"
}
]
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"newexpr",
"=",
RowBox[
{
"If",
"[",
RowBox[
{
RowBox[{"step", "\[GreaterEqual]", "3"}],
",",
RowBox[
{
"newexpr",
"/.",
RowBox[
{
"DispatchRules",
"[",
RowBox[{"RInv", ",", "3", ",", "rank", ",", "case"}],
"]"
}
]
}
],
",",
"newexpr"
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"newexpr",
"=",
RowBox[
{
"If",
"[",
RowBox[
{
RowBox[{"step", "\[GreaterEqual]", "4"}],
",",
RowBox[
{
"newexpr",
"/.",
RowBox[
{
"DispatchRules",
"[",
RowBox[{"RInv", ",", "4", ",", "rank", ",", "case"}],
"]"
}
]
}
],
",",
"newexpr"
}
],
"]"
}
]
}
]
}
]
}
],
"]"
}
],
";",
"\[IndentingNewLine]",
"newexpr"
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"RulesFor",
"[",
RowBox[
{
RowBox[
{"inv_", "[", RowBox[{"0", ",", "case_", ",", "_"}], "]"}
],
",",
"step_"
}
],
"]"
}
],
":=",
RowBox[
{
"DispatchRules",
"[",
RowBox[
{"inv", ",", "step", ",", "0", ",", "case", ",", "dim"}
],
"]"
}
]
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"InvSimplify56",
"[",
RowBox[
{
"expr_",
",",
RowBox[{"step_", "/;", RowBox[{"step", "<", "5"}]}]
}
],
"]"
}
],
":=",
"expr"
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"Have",
" ",
"not",
" ",
"implimented",
" ",
"dimension",
" ",
"dependent",
" ",
"rules",
" ",
"for",
" ",
"Tensors"
}
],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{"InvSimplify56", "[", RowBox[{"expr_", ",", "5"}], "]"}
],
":=",
RowBox[
{
"expr",
"/.",
RowBox[
{
"{",
RowBox[
{
RowBox[
{
"inv",
":",
RowBox[
{
RowBox[
{
"(",
RowBox[
{"RInv", "|", "DualRInv", "|", "WInv", "|", "DualWInv"}
],
")"
}
],
"[",
RowBox[{"0", ",", "case_", ",", "_"}],
"]"
}
]
}
],
"\[RuleDelayed]",
RowBox[
{
"(",
RowBox[
{
"inv",
"/.",
RowBox[{"RulesFor", "[", RowBox[{"inv", ",", "5"}], "]"}]
}
],
")"
}
]
}
],
"}"
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{"InvSimplify56", "[", RowBox[{"expr_", ",", "6"}], "]"}
],
":=",
RowBox[
{
RowBox[
{"InvSimplify56", "[", RowBox[{"expr", ",", "5"}], "]"}
],
"/.",
RowBox[
{
"{",
RowBox[
{
RowBox[
{
"inv",
":",
RowBox[
{
RowBox[{"(", RowBox[{"RInv", "|", "WInv"}], ")"}],
"[",
RowBox[{"0", ",", "case_", ",", "_"}],
"]"
}
]
}
],
"\[RuleDelayed]",
RowBox[
{
"(",
RowBox[
{
"inv",
"/.",
RowBox[{"RulesFor", "[", RowBox[{"inv", ",", "6"}], "]"}]
}
],
")"
}
]
}
],
"}"
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"InvSimplify56",
"[",
RowBox[{"expr_", ",", "step_"}],
"]"
}
],
":=",
"expr"
}
],
";"
}
]
],
"Input"
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["InvToPerm", "Subsection"],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"toCycles",
"[",
RowBox[{"cycles", ":", RowBox[{"{", "___List", "}"}]}],
"]"
}
],
":=",
RowBox[
{"Apply", "[", RowBox[{"Cycles", ",", "cycles"}], "]"}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[{"InvToPerm", "[", "expr_", "]"}],
":=",
RowBox[
{
"expr",
"/.",
RowBox[
{
RowBox[
{
"inv",
":",
RowBox[
{
RowBox[
{
RowBox[{"(", RowBox[{"RInv", "|", "WInv"}], ")"}],
"[",
RowBox[{"_", ",", "_"}],
"]"
}
],
"[",
RowBox[{"_", ",", "_", ",", "_"}],
"]"
}
]
}
],
"\[RuleDelayed]",
RowBox[{"InvToPerm", "[", "inv", "]"}]
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[{"InvToPerm", "[", RowBox[{"-", "info___"}], "]"}],
":=",
RowBox[{"-", RowBox[{"InvToPerm", "[", "info", "]"}]}]
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"Commuting",
" ",
"derivatives",
" ",
"can",
" ",
"introduce",
" ",
"new",
" ",
"contractions",
" ",
"in",
" ",
"the",
" ",
"Riemann",
" ",
RowBox[{"terms", ".", " ", "Need"}],
" ",
"to",
" ",
"add",
" ",
"dummy",
" ",
"indices",
" ",
"when",
" ",
"this",
" ",
"happens"
}
],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"InvToPerm",
"[",
RowBox[
{
RowBox[
{
"RInv",
"[",
RowBox[{"metric_", ",", "inds_IndexList"}],
"]"
}
],
"[",
RowBox[{"rank_", ",", "case_", ",", "count_"}],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[{"RPerm", "[", "metric", "]"}],
"[",
RowBox[
{
RowBox[{"{", RowBox[{"case", ",", "0"}], "}"}],
",",
RowBox[{"{", "rank", "}"}],
",",
"inds",
",",
RowBox[
{
"toCycles",
"[",
RowBox[
{
RowBox[
{
"RInv",
"[",
RowBox[{"rank", ",", "case", ",", "count"}],
"]"
}
],
"/.",
RowBox[
{
"DispatchRInvToPermRules",
"[",
RowBox[{"rank", ",", "case"}],
"]"
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"InvToPerm",
"[",
RowBox[
{
RowBox[
{
"WInv",
"[",
RowBox[{"metric_", ",", "inds_IndexList"}],
"]"
}
],
"[",
RowBox[{"rank_", ",", "case_", ",", "count_"}],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[{"WPerm", "[", "metric", "]"}],
"[",
RowBox[
{
RowBox[{"{", RowBox[{"case", ",", "0"}], "}"}],
",",
RowBox[{"{", "rank", "}"}],
",",
"inds",
",",
RowBox[
{
"toCycles",
"[",
RowBox[
{
RowBox[
{
"RInv",
"[",
RowBox[{"rank", ",", "case", ",", "count"}],
"]"
}
],
"/.",
RowBox[
{
"DispatchRInvToPermRules",
"[",
RowBox[{"rank", ",", "case"}],
"]"
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"InvToPerm",
"[",
RowBox[
{
RowBox[
{
"DualRInv",
"[",
RowBox[{"metric_", ",", "inds_IndexList"}],
"]"
}
],
"[",
RowBox[{"rank_", ",", "case_", ",", "count_"}],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[{"RPerm", "[", "metric", "]"}],
"[",
RowBox[
{
RowBox[{"{", RowBox[{"case", ",", "1"}], "}"}],
",",
RowBox[{"{", "rank", "}"}],
",",
"inds",
",",
RowBox[
{
"toCycles",
"[",
RowBox[
{
RowBox[
{
"RInv",
"[",
RowBox[{"rank", ",", "case", ",", "count"}],
"]"
}
],
"/.",
RowBox[
{
"DispatchDualRInvToPermRules",
"[",
RowBox[{"rank", ",", "case"}],
"]"
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"InvToPerm",
"[",
RowBox[
{
RowBox[
{
"DualWInv",
"[",
RowBox[{"metric_", ",", "inds_IndexList"}],
"]"
}
],
"[",
RowBox[{"rank_", ",", "case_", ",", "count_"}],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[{"WPerm", "[", "metric", "]"}],
"[",
RowBox[
{
RowBox[{"{", RowBox[{"case", ",", "1"}], "}"}],
",",
RowBox[{"{", "rank", "}"}],
",",
"inds",
",",
RowBox[
{
"toCycles",
"[",
RowBox[
{
RowBox[
{
"RInv",
"[",
RowBox[{"rank", ",", "case", ",", "count"}],
"]"
}
],
"/.",
RowBox[
{
"DispatchDualRInvToPermRules",
"[",
RowBox[{"rank", ",", "case"}],
"]"
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"SetNumberOfArguments",
"[",
RowBox[{"InvToPerm", ",", "1"}],
"]"
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
RowBox[
{
"InvToPerm",
"[",
RowBox[
{
RowBox[
{
"RInv",
"[",
RowBox[{"metric_", ",", "indexlist_IndexList"}],
"]"
}
],
"[",
RowBox[{"rank_", ",", "case_", ",", "count_"}],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[
{
"{",
RowBox[
{
"dummyInds",
",",
"upperInds",
" ",
",",
"lowerInds",
",",
"newcontracted"
}
],
"}"
}
],
",",
RowBox[
{
RowBox[
{
"dummyinds",
"=",
RowBox[
{
RowBox[{"4", RowBox[{"Length", "[", "case", "]"}]}],
"+",
RowBox[{"Total", "[", "case", "]"}],
"-",
RowBox[{"Length", "[", "indexlist", "]"}]
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"upperInds",
"=",
RowBox[
{
"IndexList",
"@@",
RowBox[
{
"Table",
"[",
RowBox[
{
RowBox[
{
"DummyIn",
"[",
RowBox[{"VBundleOfMetric", "[", "metric", "]"}],
"]"
}
],
",",
RowBox[
{
"{",
RowBox[
{"i", ",", "1", ",", RowBox[{"dummyinds", "/", "2"}]}
],
"}"
}
]
}
],
"]"
}
]
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
"newcontracted",
"=",
RowBox[
{
"Join",
"[",
RowBox[
{"upperInds", ",", RowBox[{"Minus", "/@", "upperInds"}]}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
"If",
"[",
RowBox[
{
RowBox[
{
RowBox[{"Length", "[", "indexlist", "]"}],
"==",
RowBox[
{
RowBox[{"4", RowBox[{"Length", "[", "case", "]"}]}],
"+",
RowBox[{"Total", "[", "case", "]"}]
}
]
}
],
",",
RowBox[
{
RowBox[{"RPerm", "[", "metric", "]"}],
"[",
RowBox[
{
RowBox[{"{", RowBox[{"case", ",", "0"}], "}"}],
",",
RowBox[{"{", "rank", "}"}],
",",
"indexlist",
",",
RowBox[
{
"toCycles",
"[",
RowBox[
{
RowBox[
{
"RInv",
"[",
RowBox[{"rank", ",", "case", ",", "count"}],
"]"
}
],
"/.",
RowBox[
{
"DispatchRInvToPermRules",
"[",
RowBox[{"rank", ",", "case"}],
"]"
}
]
}
],
"]"
}
]
}
],
"]"
}
],
",",
RowBox[
{
RowBox[{"RPerm", "[", "metric", "]"}],
"[",
RowBox[
{
RowBox[{"{", RowBox[{"case", ",", "0"}], "}"}],
",",
RowBox[{"{", "rank", "}"}],
",",
RowBox[
{
"Join",
"[",
RowBox[{"indexlist", ",", "newcontracted"}],
"]"
}
],
",",
RowBox[
{
"toCycles",
"[",
RowBox[
{
RowBox[
{
"RInv",
"[",
RowBox[{"rank", ",", "case", ",", "count"}],
"]"
}
],
"/.",
RowBox[
{
"DispatchRInvToPermRules",
"[",
RowBox[{"rank", ",", "case"}],
"]"
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
],
"]"
}
]
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
RowBox[
{
"(*",
RowBox[
{
RowBox[{"RPerm", "[", "metric", "]"}],
"[",
RowBox[
{
RowBox[{"{", RowBox[{"case", ",", "0"}], "}"}],
",",
RowBox[{"{", "rank", "}"}],
",",
RowBox[{"Join", "[", "indexlist", "]"}],
",",
RowBox[
{
"toCycles",
"[",
RowBox[
{
RowBox[
{
"RInv",
"[",
RowBox[{"rank", ",", "case", ",", "count"}],
"]"
}
],
"/.",
RowBox[
{
"DispatchRInvToPermRules",
"[",
RowBox[{"rank", ",", "case"}],
"]"
}
]
}
],
"]"
}
]
}
],
"]"
}
],
"*)"
}
],
"*)"
}
]
],
"Input"
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["PermToRiemann", "Subsection"],
Cell[
BoxData[
{
RowBox[
{
RowBox[{"canon", "[", "metric_", "]"}],
":=",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[{"{", "upinds", "}"}],
",",
RowBox[
{
RowBox[
{
"upinds",
"=",
RowBox[
{
"DummyIn",
"/@",
RowBox[
{
"ConstantArray",
"[",
RowBox[
{
RowBox[{"VBundleOfMetric", "[", "metric", "]"}],
",",
"18"
}
],
"]"
}
]
}
]
}
],
";",
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
"IndexList",
"@@",
RowBox[
{
"Flatten",
"@",
RowBox[
{
"Transpose",
"[",
RowBox[
{
"{",
RowBox[{"upinds", ",", RowBox[{"Minus", "/@", "upinds"}]}],
"}"
}
],
"]"
}
]
}
]
}
]
}
]
}
],
"]"
}
]
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"(*",
RowBox[
{
RowBox[
{
RowBox[{"upindices", "[", "metric_", "]"}],
":=",
RowBox[
{
RowBox[{"upindices", "[", "metric", "]"}],
"=",
RowBox[
{
"DummyIn",
"/@",
RowBox[
{
"ConstantArray",
"[",
RowBox[
{
RowBox[{"VBundleOfMetric", "[", "metric", "]"}],
",",
"18"
}
],
"]"
}
]
}
]
}
]
}
],
";",
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
RowBox[{"canon", "[", "metric_", "]"}],
":=",
RowBox[
{
"IndexList",
"@@",
RowBox[
{
"Flatten",
"@",
RowBox[
{
"Transpose",
"[",
RowBox[
{
"{",
RowBox[
{
RowBox[
{"a", "=", RowBox[{"upindices", "[", "metric", "]"}]}
],
",",
RowBox[{"Minus", "/@", "a"}]
}
],
"}"
}
],
"]"
}
]
}
]
}
]
}
],
";"
}
],
"*)"
}
]
}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"translate",
"[",
RowBox[
{
RowBox[{"RPerm", "[", "metric_", "]"}],
"[",
RowBox[
{
RowBox[{"{", RowBox[{"case_", ",", "dege_"}], "}"}],
",",
RowBox[{"{", "frees_", "}"}],
",",
"index_IndexList",
",",
"perm_"
}
],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
"First",
"@",
RowBox[
{
"TranslatePerm",
"[",
RowBox[
{
"perm",
",",
RowBox[
{
"{",
RowBox[
{
"Images",
",",
RowBox[
{
RowBox[{"4", RowBox[{"Length", "[", "case", "]"}]}],
"+",
RowBox[{"Plus", "@@", "case"}],
"+",
RowBox[{"4", "dege"}]
}
]
}
],
"}"
}
]
}
],
"]"
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[{"RPerm", "[", "metric_", "]"}],
"[",
RowBox[
{
"info_",
",",
"frees_",
",",
"indexlist_",
",",
RowBox[{"-", "perm_"}]
}
],
"]"
}
],
":=",
RowBox[
{
"-",
RowBox[
{
RowBox[{"RPerm", "[", "metric", "]"}],
"[",
RowBox[
{"info", ",", "frees", ",", "indexlist", ",", "perm"}
],
"]"
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[{"WPerm", "[", "metric_", "]"}],
"[",
RowBox[
{
"info_",
",",
"frees_",
",",
"indexlist_",
",",
RowBox[{"-", "perm_"}]
}
],
"]"
}
],
":=",
RowBox[
{
"-",
RowBox[
{
RowBox[{"WPerm", "[", "metric", "]"}],
"[",
RowBox[
{"info", ",", "frees", ",", "indexlist", ",", "perm"}
],
"]"
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"riemannof",
"[",
RowBox[
{
"metric_",
",",
"0",
",",
"indices_",
",",
RowBox[{"{", RowBox[{"other___", ",", "n_"}], "}"}]
}
],
"]"
}
],
":=",
RowBox[
{
"With",
"[",
RowBox[
{
RowBox[
{
"{",
RowBox[
{"CD", "=", RowBox[{"CovDOfMetric", "[", "metric", "]"}]}
],
"}"
}
],
",",
RowBox[
{
RowBox[
{
RowBox[
{
"Apply",
"[",
RowBox[
{
"Composition",
",",
RowBox[
{
"CD",
"/@",
RowBox[
{
"indices",
"[",
RowBox[
{
"[",
RowBox[
{
"Range",
"[",
RowBox[
{
RowBox[{"4", "+", "n"}],
",",
"5",
",",
RowBox[{"-", "1"}]
}
],
"]"
}
],
"]"
}
],
"]"
}
]
}
]
}
],
"]"
}
],
"[",
RowBox[
{
"Apply",
"[",
RowBox[
{
RowBox[{"Riemann", "[", "CD", "]"}],
",",
RowBox[{"Take", "[", RowBox[{"indices", ",", "4"}], "]"}]
}
],
"]"
}
],
"]"
}
],
RowBox[
{
"riemannof",
"[",
RowBox[
{
"metric",
",",
"0",
",",
RowBox[
{
"Drop",
"[",
RowBox[{"indices", ",", RowBox[{"4", "+", "n"}]}],
"]"
}
],
",",
RowBox[{"{", "other", "}"}]
}
],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"riemannof",
"[",
RowBox[
{"metric_", ",", "1", ",", "indices_", ",", "case_"}
],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"riemannof",
"[",
RowBox[
{
"metric",
",",
"0",
",",
RowBox[
{
"Drop",
"[",
RowBox[{"indices", ",", RowBox[{"-", "4"}]}],
"]"
}
],
",",
"case"
}
],
"]"
}
],
RowBox[
{
"Apply",
"[",
RowBox[
{
RowBox[{"epsilon", "[", "metric", "]"}],
",",
RowBox[
{
"Take",
"[",
RowBox[{"indices", ",", RowBox[{"-", "4"}]}],
"]"
}
]
}
],
"]"
}
]
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"riemannof",
"[",
RowBox[
{
"_",
",",
"_",
",",
RowBox[{"{", "}"}],
",",
RowBox[{"{", "}"}]
}
],
"]"
}
],
":=",
"1"
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[{"PermToRiemann", "[", "rperm_", "]"}],
":=",
RowBox[
{
"PermToRiemann",
"[",
RowBox[{"rperm", ",", "$CurvatureRelations"}],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"PermToRiemann",
"[",
RowBox[
{
RowBox[
{
"rperm",
":",
RowBox[
{
RowBox[{"RPerm", "[", "metric_", "]"}],
"[",
RowBox[
{
RowBox[{"{", RowBox[{"case_", ",", "dege_"}], "}"}],
",",
RowBox[{"{", "0", "}"}],
",",
"free_IndexList",
",",
"_"
}
],
"]"
}
]
}
],
",",
"cr_"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"ToRicci",
"[",
RowBox[{"metric", ",", "cr", ",", "False"}],
"]"
}
],
"[",
RowBox[
{
"riemannof",
"[",
RowBox[
{
"metric",
",",
"dege",
",",
RowBox[
{
"List",
"@@",
RowBox[
{
RowBox[
{
"IndexSort",
"[",
RowBox[
{
"Join",
"[",
RowBox[
{"free", ",", RowBox[{"canon", "[", "metric", "]"}]}
],
"]"
}
],
"]"
}
],
"[",
RowBox[
{"[", RowBox[{"translate", "[", "rperm", "]"}], "]"}
],
"]"
}
]
}
],
",",
RowBox[{"Reverse", "[", "case", "]"}]
}
],
"]"
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"PermToRiemann",
"[",
RowBox[
{
RowBox[
{
"rperm",
":",
RowBox[
{
RowBox[{"RPerm", "[", "metric_", "]"}],
"[",
RowBox[
{
RowBox[{"{", RowBox[{"case_", ",", "dege_"}], "}"}],
",",
RowBox[{"{", "rank_", "}"}],
",",
"free_IndexList",
",",
"_"
}
],
"]"
}
]
}
],
",",
"cr_"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"ToRicci",
"[",
RowBox[{"metric", ",", "cr", ",", "True"}],
"]"
}
],
"[",
RowBox[
{
"riemannof",
"[",
RowBox[
{
"metric",
",",
"dege",
",",
RowBox[
{
"List",
"@@",
RowBox[
{
RowBox[
{
"IndexSort",
"[",
RowBox[
{
"Join",
"[",
RowBox[
{"free", ",", RowBox[{"canon", "[", "metric", "]"}]}
],
"]"
}
],
"]"
}
],
"[",
RowBox[
{"[", RowBox[{"translate", "[", "rperm", "]"}], "]"}
],
"]"
}
]
}
],
",",
RowBox[{"Reverse", "[", "case", "]"}]
}
],
"]"
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"To",
" ",
"Ricci",
" ",
"function",
" ",
"needs",
" ",
"to",
" ",
"be",
" ",
"written",
" ",
"for",
" ",
"free",
" ",
"indices",
" ",
"Here",
" ",
"the",
" ",
"thrid",
" ",
"agrument",
" ",
"is",
" ",
"True",
" ",
"if",
" ",
"the",
" ",
"expression",
" ",
"is",
" ",
"a",
" ",
"tensor",
" ",
"and",
" ",
"False",
" ",
"if",
" ",
"it",
" ",
"is",
" ",
"a",
" ",
"scalar"
}
],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"ToRicci",
"[",
RowBox[{"metric_", ",", "False", ",", "False"}],
"]"
}
],
"[",
"expr_",
"]"
}
],
":=",
RowBox[{"Scalar", "[", "expr", "]"}]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"ToRicci",
"[",
RowBox[{"metric_", ",", "False", ",", "True"}],
"]"
}
],
"[",
"expr_",
"]"
}
],
":=",
"expr"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"ToRicci",
"[",
RowBox[{"metric_", ",", "True", ",", "False"}],
"]"
}
],
"[",
"expr_",
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"Scalar",
"@",
RowBox[
{
"ContractMetric",
"[",
RowBox[
{
RowBox[
{
"expr",
"/.",
RowBox[
{
"CurvatureRelations",
"[",
RowBox[
{
RowBox[{"CovDOfMetric", "[", "metric", "]"}],
",",
"Riemann"
}
],
"]"
}
]
}
],
",",
"metric"
}
],
"]"
}
]
}
],
"/.",
RowBox[
{
"CurvatureRelations",
"[",
RowBox[
{
RowBox[{"CovDOfMetric", "[", "metric", "]"}],
",",
"Ricci"
}
],
"]"
}
]
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"ToWeyl", "[", RowBox[{"expr_", ",", "cd_"}], "]"}],
":=",
RowBox[
{
"expr",
"/.",
RowBox[
{
"{",
RowBox[
{
RowBox[
{
RowBox[{"Riemann", "[", "cd", "]"}],
"\[RuleDelayed]",
RowBox[{"Weyl", "[", "cd", "]"}]
}
],
",",
RowBox[
{
RowBox[{"Ricci", "[", "cd", "]"}],
"\[RuleDelayed]",
RowBox[{"TFRicci", "[", "cd", "]"}]
}
]
}
],
"}"
}
]
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"ToRicci",
"[",
RowBox[{"metric_", ",", "True", ",", "True"}],
"]"
}
],
"[",
"expr_",
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"ContractMetric",
"[",
RowBox[
{
RowBox[
{
"expr",
"/.",
RowBox[
{
"CurvatureRelations",
"[",
RowBox[
{
RowBox[{"CovDOfMetric", "[", "metric", "]"}],
",",
"Riemann"
}
],
"]"
}
]
}
],
",",
"metric"
}
],
"]"
}
],
"/.",
RowBox[
{
"CurvatureRelations",
"[",
RowBox[
{
RowBox[{"CovDOfMetric", "[", "metric", "]"}],
",",
"Ricci"
}
],
"]"
}
]
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"ToWeyl", "[", RowBox[{"expr_", ",", "cd_"}], "]"}],
":=",
RowBox[
{
"expr",
"/.",
RowBox[
{
"{",
RowBox[
{
RowBox[
{
RowBox[{"Riemann", "[", "cd", "]"}],
"\[RuleDelayed]",
RowBox[{"Weyl", "[", "cd", "]"}]
}
],
",",
RowBox[
{
RowBox[{"Ricci", "[", "cd", "]"}],
"\[RuleDelayed]",
RowBox[{"TFRicci", "[", "cd", "]"}]
}
]
}
],
"}"
}
]
}
]
}
],
";"
}
]
}
],
"Input"
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["InvToRiemann", "Subsection"],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[{"InvToRiemann1", "[", "cr_", "]"}],
"[",
RowBox[
{
"inv",
":",
RowBox[
{
RowBox[
{
RowBox[
{
"(",
RowBox[
{"RInv", "|", "DualRInv", "|", "WInv", "|", "DualWInv"}
],
")"
}
],
"[",
RowBox[{"_", ",", "_"}],
"]"
}
],
"[",
RowBox[{"_", ",", "_", ",", "_"}],
"]"
}
]
}
],
"]"
}
],
":=",
RowBox[
{
"PermToRiemann",
"[",
RowBox[{RowBox[{"InvToPerm", "[", "inv", "]"}], ",", "cr"}],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[{"InvToRiemann", "[", "expr_", "]"}],
":=",
RowBox[
{
"InvToRiemann",
"[",
RowBox[{"expr", ",", "$CurvatureRelations"}],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{"InvToRiemann", "[", RowBox[{"expr_", ",", "cr_"}], "]"}
],
":=",
RowBox[
{
"expr",
"/.",
RowBox[
{
RowBox[
{
"inv",
":",
RowBox[
{
RowBox[
{
RowBox[
{
"(",
RowBox[
{"RInv", "|", "DualRInv", "|", "WInv", "|", "DualWInv"}
],
")"
}
],
"[",
RowBox[{"_", ",", "_"}],
"]"
}
],
"[",
RowBox[{"_", ",", "_", ",", "_"}],
"]"
}
]
}
],
"\[RuleDelayed]",
RowBox[
{
RowBox[{"InvToRiemann1", "[", "cr", "]"}],
"[",
"inv",
"]"
}
]
}
]
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"SetNumberOfArguments",
"[",
RowBox[
{
"InvToRiemann",
",",
RowBox[{"{", RowBox[{"1", ",", "2"}], "}"}]
}
],
"]"
}
],
";"
}
]
}
],
"Input"
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["RiemannToPerm", "Subsection"],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"No",
" ",
"change",
" ",
"for",
" ",
"first",
" ",
"three"
}
],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"addone",
"[",
RowBox[{"head_", "[", "n_Integer", "]"}],
"]"
}
],
":=",
RowBox[{"head", "[", RowBox[{"n", "+", "1"}], "]"}]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"addone",
"[",
RowBox[
{
"casePlus",
"[",
RowBox[{"{", RowBox[{"head_", ",", "n_Integer"}], "}"}],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
"casePlus",
"[",
RowBox[
{"{", RowBox[{"head", ",", RowBox[{"n", "+", "1"}]}], "}"}
],
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
"SetAttributes",
"[",
RowBox[
{
"casePlus",
",",
RowBox[{"{", RowBox[{"Flat", ",", "Orderless"}], "}"}]
}
],
"]"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[
{
"casePlus",
"[",
RowBox[
{
RowBox[{"{", RowBox[{"head_", ",", "n__"}], "}"}],
",",
"c___",
",",
RowBox[{"{", RowBox[{"head_", ",", "m__"}], "}"}]
}
],
"]"
}
],
":=",
RowBox[
{
"casePlus",
"[",
RowBox[
{
RowBox[{"{", RowBox[{"head", ",", "m", ",", "n"}], "}"}],
",",
"c"
}
],
"]"
}
]
}
],
";"
}
],
"\n",
RowBox[
{
RowBox[
{
RowBox[{"casePlus", "[", RowBox[{"0", ",", "c___"}], "]"}],
":=",
RowBox[{"casePlus", "[", "c", "]"}]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{RowBox[{"casePlus", "[", "ERROR", "]"}], ":=", "ERROR"}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{"casePlus", "[", RowBox[{"ERROR", ",", "__"}], "]"}
],
":=",
"ERROR"
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"degrees",
"[",
RowBox[{"expr_", ",", "cd_", ",", "metric_"}],
"]"
}
],
":=",
RowBox[
{
"With",
"[",
RowBox[
{
RowBox[
{
"{",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{"riemann", "=", RowBox[{"Riemann", "[", "cd", "]"}]}
],
",",
"\[IndentingNewLine]",
RowBox[{"ricci", "=", RowBox[{"Ricci", "[", "cd", "]"}]}],
",",
"\[IndentingNewLine]",
RowBox[
{
"ricciscalar",
"=",
RowBox[{"RicciScalar", "[", "cd", "]"}]
}
],
",",
"\[IndentingNewLine]",
RowBox[{"weyl", "=", RowBox[{"Weyl", "[", "cd", "]"}]}],
",",
"\[IndentingNewLine]",
RowBox[
{"tfricci", "=", RowBox[{"TFRicci", "[", "cd", "]"}]}
],
",",
"\[IndentingNewLine]",
RowBox[
{"eps", "=", RowBox[{"epsilon", "[", "metric", "]"}]}
]
}
],
"}"
}
],
",",
"\[IndentingNewLine]",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[{"{", "deg", "}"}],
",",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"deg",
"[",
RowBox[
{
RowBox[{RowBox[{"cd", "[", "_", "]"}], "[", "expr1_", "]"}],
"x_."
}
],
"]"
}
],
":=",
RowBox[
{
"casePlus",
"[",
RowBox[
{
RowBox[
{"addone", "[", RowBox[{"deg", "[", "expr1", "]"}], "]"}
],
",",
RowBox[{"deg", "[", "x", "]"}]
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
RowBox[{"deg", "[", RowBox[{"_riemann", " ", "x_."}], "]"}],
":=",
RowBox[
{
"casePlus",
"[",
RowBox[
{
RowBox[{"{", RowBox[{"Riemann", ",", "0"}], "}"}],
",",
RowBox[{"deg", "[", "x", "]"}]
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
RowBox[{"deg", "[", RowBox[{"_ricci", " ", "x_."}], "]"}],
":=",
RowBox[
{
"casePlus",
"[",
RowBox[
{
RowBox[{"{", RowBox[{"Ricci", ",", "0"}], "}"}],
",",
RowBox[{"deg", "[", "x", "]"}]
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{"deg", "[", RowBox[{"_ricciscalar", " ", "x_."}], "]"}
],
":=",
RowBox[
{
"casePlus",
"[",
RowBox[
{
RowBox[{"{", RowBox[{"RicciScalar", ",", "0"}], "}"}],
",",
RowBox[{"deg", "[", "x", "]"}]
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
RowBox[{"deg", "[", RowBox[{"_weyl", " ", "x_."}], "]"}],
":=",
RowBox[
{
"casePlus",
"[",
RowBox[
{
RowBox[{"{", RowBox[{"Weyl", ",", "0"}], "}"}],
",",
RowBox[{"deg", "[", "x", "]"}]
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
RowBox[{"deg", "[", RowBox[{"_tfricci", " ", "x_."}], "]"}],
":=",
RowBox[
{
"casePlus",
"[",
RowBox[
{
RowBox[{"{", RowBox[{"TFRicci", ",", "0"}], "}"}],
",",
RowBox[{"deg", "[", "x", "]"}]
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
RowBox[{"deg", "[", RowBox[{"_eps", " ", "x_."}], "]"}],
":=",
RowBox[
{
"casePlus",
"[",
RowBox[
{
RowBox[{"{", RowBox[{"epsilon", ",", "0"}], "}"}],
",",
RowBox[{"deg", "[", "x", "]"}]
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{"deg", "[", RowBox[{"1", "|", RowBox[{"-", "1"}]}], "]"}
],
":=",
"0"
}
],
";",
"\[IndentingNewLine]",
RowBox[{RowBox[{"deg", "[", "x_", "]"}], ":=", "Infinity"}],
";",
"\[IndentingNewLine]",
RowBox[{"deg", "[", "expr", "]"}]
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"Added",
" ",
"a",
" ",
"metric",
" ",
"times",
" ",
"so",
" ",
"that",
" ",
"expression",
" ",
"with",
" ",
SuperscriptBox["g", "ab"],
" ",
"can",
" ",
"be",
" ",
"passed",
" ",
"through"
}
],
" ",
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToPerm",
"[",
RowBox[{"expr_", ",", "args___"}],
"]"
}
],
":=",
RowBox[
{
"RiemannToPerm0",
"[",
RowBox[
{
RowBox[
{
"ContractMetric",
"@",
RowBox[{"Expand", "[", "expr", "]"}]
}
],
",",
"args"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"SetNumberOfArguments",
"[",
RowBox[
{
"RiemannToPerm",
",",
RowBox[{"{", RowBox[{"1", ",", "2"}], "}"}]
}
],
"]"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
"(*",
" ",
RowBox[{"Thread", " ", "over", " ", "sums"}],
" ",
"*)"
}
]
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToPerm0",
"[",
RowBox[{"expr_Plus", ",", "args___"}],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
RowBox[
{"RiemannToPerm0", "[", RowBox[{"#", ",", "args"}], "]"}
],
"&"
}
],
"/@",
"expr"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToPerm0",
"[",
RowBox[{"expr_", ",", "args___"}],
"]"
}
],
":=",
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[
{
RowBox[
{
"BreakInMonomials",
"[",
RowBox[
{
"BreakScalars",
"@",
RowBox[{"PutScalar", "[", "expr", "]"}]
}
],
"]"
}
],
",",
"args"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
"(*",
" ",
RowBox[
{
"Deal",
" ",
"with",
" ",
"the",
" ",
"second",
" ",
"argument"
}
],
" ",
"*)"
}
]
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"RiemannToPerm1", "[", "expr_", "]"}],
":=",
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[{"expr", ",", "$Metrics"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[{"expr_", ",", "metrics_List"}],
"]"
}
],
":=",
RowBox[
{
"Fold",
"[",
RowBox[{"RiemannToPerm1", ",", "expr", ",", "metrics"}],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[
{
RowBox[{RowBox[{"a_", "?", "NumberQ"}], " ", "expr_"}],
",",
"metric_"
}
],
"]"
}
],
":=",
RowBox[
{
"a",
" ",
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[{"expr", ",", "metric"}],
"]"
}
]
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
"(*",
RowBox[{"Look", " ", "for", " ", "scalars"}],
" ",
"*)"
}
]
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[
{
RowBox[{"Monomial", "[", "expr_", "]"}],
",",
"metric_Symbol"
}
],
"]"
}
],
":=",
"\[IndentingNewLine]",
RowBox[
{
"arrange",
"[",
RowBox[
{
"expr",
",",
RowBox[
{
"degrees",
"[",
RowBox[
{
"expr",
",",
RowBox[{"CovDOfMetric", "[", "metric", "]"}],
",",
"metric"
}
],
"]"
}
],
",",
"metric"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[{"expr_Times", ",", "metric_"}],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
RowBox[
{"RiemannToPerm1", "[", RowBox[{"#", ",", "metric"}], "]"}
],
"&"
}
],
"/@",
"expr"
}
]
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"(*",
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[
{
RowBox[{"Scalar", "[", "expr_", "]"}],
",",
"metric_Symbol"
}
],
"]"
}
],
":=",
RowBox[
{
"arrange",
"[",
RowBox[
{
"expr",
",",
RowBox[
{
"degrees",
"[",
RowBox[
{
"expr",
",",
RowBox[{"CovDOfMetric", "[", "metric", "]"}],
",",
"metric"
}
],
"]"
}
],
",",
"metric"
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[{"expr_Times", ",", "metric_Symbol"}],
"]"
}
],
":=",
RowBox[
{
"RiemannToPerm2",
"[",
RowBox[
{
RowBox[
{
RowBox[
{"ScalarTest", "[", RowBox[{"#", ",", "metric"}], "]"}
],
"&"
}
],
"/@",
"expr"
}
],
"]"
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"ScalarTest",
"[",
RowBox[{"expr_", ",", "metric_Symbol"}],
"]"
}
],
":=",
RowBox[
{
"If",
"[",
RowBox[
{
RowBox[{"ScalarQ", "[", "expr", "]"}],
",",
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[{"expr", ",", "metric"}],
"]"
}
],
",",
"expr"
}
],
"]"
}
]
}
]
}
],
"*)"
}
]
}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[
{
RowBox[{"Scalar", "[", "expr_", "]"}],
",",
"metric_Symbol"
}
],
"]"
}
],
":=",
RowBox[
{
"arrange",
"[",
RowBox[
{
"expr",
",",
RowBox[
{
"degrees",
"[",
RowBox[
{
"expr",
",",
RowBox[{"CovDOfMetric", "[", "metric", "]"}],
",",
"metric"
}
],
"]"
}
],
",",
"metric"
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[
{
RowBox[{"Monomial", "[", "expr_", "]"}],
",",
"metric_Symbol"
}
],
"]"
}
],
":=",
RowBox[
{
"arrange",
"[",
RowBox[
{
"expr",
",",
RowBox[
{
"degrees",
"[",
RowBox[
{
"expr",
",",
RowBox[{"CovDOfMetric", "[", "metric", "]"}],
",",
"metric"
}
],
"]"
}
],
",",
"metric"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[
{
RowBox[
{"Power", "[", RowBox[{"expr_", ",", "n_Integer"}], "]"}
],
",",
"metric_Symbol"
}
],
"]"
}
],
":=",
RowBox[
{
"Power",
"[",
RowBox[
{
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[{"expr", ",", "metric"}],
"]"
}
],
",",
"n"
}
],
"]"
}
]
}
],
";"
}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[
{RowBox[{"tensor_Symbol", "[", "]"}], ",", "metric_Symbol"}
],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
RowBox[{"RPerm", "[", "metric", "]"}],
"[",
RowBox[
{
RowBox[
{"{", RowBox[{RowBox[{"{", "0", "}"}], ",", "0"}], "}"}
],
",",
RowBox[{"{", "0", "}"}],
",",
RowBox[{"IndexList", "[", "]"}],
",",
RowBox[
{
"xAct`xPerm`Cycles",
"[",
RowBox[{"{", RowBox[{"2", ",", "3"}], "}"}],
"]"
}
]
}
],
"]"
}
],
"/;",
RowBox[
{
"tensor",
"===",
RowBox[
{
"RicciScalar",
"[",
RowBox[{"CovDOfMetric", "[", "metric", "]"}],
"]"
}
]
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[BoxData[""], "Input"],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"(*",
" ",
RowBox[
{
"Possibilities",
" ",
"for",
" ",
"the",
" ",
"first",
" ",
"argument"
}
],
" ",
"*)"
}
],
"\n",
RowBox[
{
"(*",
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToPerm2",
"[",
RowBox[
{
RowBox[{RowBox[{"a_", "?", "NumberQ"}], " ", "expr_"}],
",",
"metric_"
}
],
"]"
}
],
":=",
RowBox[
{
"a",
" ",
RowBox[
{
"RiemannToPerm2",
"[",
RowBox[{"expr", ",", "metric"}],
"]"
}
]
}
]
}
],
";",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"RiemannToPerm2",
"[",
RowBox[{"expr_", ",", "metric_Symbol"}],
"]"
}
],
":=",
RowBox[
{
"HoldForm",
"[",
RowBox[
{
"arrange",
"[",
RowBox[
{
"expr",
",",
RowBox[
{
"degrees",
"[",
RowBox[
{
"expr",
",",
RowBox[{"CovDOfMetric", "[", "metric", "]"}],
",",
"metric"
}
],
"]"
}
],
",",
"metric"
}
],
"]"
}
],
"]"
}
]
}
],
";"
}
],
"*)"
}
],
"\[IndentingNewLine]",
RowBox[
{
"(*",
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[
{
RowBox[
{
RowBox[{"metric", "[", RowBox[{"a_", ",", "b_"}], "]"}],
"expr_"
}
],
",",
"metric_Symbol"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[{"metric", "[", RowBox[{"a", ",", "b"}], "]"}],
RowBox[
{
"RiemannToPerm1",
"[",
RowBox[{"expr", ",", "metric"}],
"]"
}
]
}
]
}
],
";"
}
],
"*)"
}
],
"\[IndentingNewLine]"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"(*",
" ",
RowBox[{"0.", " ", "Trivial", " ", "cases"}],
" ",
"*)"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
RowBox[
{"arrange", "[", RowBox[{"0", ",", "_", ",", "_"}], "]"}
],
":=",
"0"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"arrange",
"[",
RowBox[{"expr_", ",", "Infinity", ",", "_"}],
"]"
}
],
":=",
"expr"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
"(*",
" ",
RowBox[
{
"1.",
" ",
"There",
" ",
"is",
" ",
"Ricci",
" ",
"or",
" ",
RowBox[
{
"RicciScalar",
":",
" ",
RowBox[{"convert", " ", "to", " ", "Riemann"}]
}
]
}
],
" ",
"*)"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"HoldPattern",
"[",
" ",
RowBox[
{
"arrange",
"[",
RowBox[
{
"expr_",
",",
RowBox[
{
"casePlus",
"[",
RowBox[
{
RowBox[
{
"{",
RowBox[{RowBox[{"Ricci", "|", "RicciScalar"}], ",", "m__"}],
"}"
}
],
",",
"c___"
}
],
"]"
}
],
",",
"metric_"
}
],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
"arrange",
"[",
RowBox[
{
RowBox[
{
"ScreenDollarIndices",
"[",
RowBox[
{
"RicciToRiemann",
"[",
RowBox[
{"expr", ",", RowBox[{"CovDOfMetric", "[", "metric", "]"}]}
],
"]"
}
],
"]"
}
],
",",
RowBox[
{
"casePlus",
"[",
RowBox[
{
RowBox[{"{", RowBox[{"Riemann", ",", "m"}], "}"}],
",",
"c"
}
],
"]"
}
],
",",
"metric"
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"arrange",
"[",
RowBox[
{
RowBox[
{
RowBox[{"metric", "[", RowBox[{"a_", ",", "b_"}], "]"}],
"expr_"
}
],
",",
RowBox[
{
"casePlus",
"[",
RowBox[
{
"Infinity",
",",
RowBox[{"{", RowBox[{"Riemann", ",", "m__"}], "}"}],
",",
"c___"
}
],
"]"
}
],
",",
"metric_Symbol"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[{"metric", "[", RowBox[{"a", ",", "b"}], "]"}],
RowBox[
{
"arrange",
"[",
RowBox[
{
"expr",
",",
RowBox[
{
"degrees",
"[",
RowBox[{"expr", ",", "CD", ",", "metric"}],
"]"
}
],
",",
"metric"
}
],
"]"
}
]
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
"(*",
" ",
RowBox[
{
"2",
RowBox[{"a", ".", " ", "There"}],
" ",
"are",
" ",
"only",
" ",
RowBox[
{
"Riemanns",
":",
" ",
RowBox[
{
RowBox[{"compute", " ", "non"}],
"-",
RowBox[{"dual", " ", "permutation"}]
}
]
}
]
}
],
" ",
"*)"
}
],
"\n",
"\[IndentingNewLine]",
RowBox[
{
"(*",
RowBox[
{
"Change",
" ",
RowBox[
{
"here",
":",
" ",
RowBox[
{
"Get",
" ",
"indicesof",
" ",
"the",
" ",
"expression",
" ",
"and",
" ",
"the",
" ",
"rank",
" ",
"of",
" ",
"the",
" ",
"tensor"
}
]
}
]
}
],
"*)"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[
{
"HoldPattern",
"[",
RowBox[
{
"arrange",
"[",
RowBox[
{
"expr_",
",",
RowBox[
{
"casePlus",
"[",
RowBox[{"{", RowBox[{"Riemann", ",", "Rcase__"}], "}"}],
"]"
}
],
",",
"metric_"
}
],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
"With",
"[",
RowBox[
{
RowBox[
{
"{",
RowBox[
{
"canonical",
"=",
RowBox[
{
RowBox[
{
RowBox[
{
"{",
RowBox[
{
RowBox[{"#", "[", RowBox[{"[", "1", "]"}], "]"}],
",",
RowBox[
{
"#",
"[",
RowBox[{"[", RowBox[{"2", ",", "1", ",", "1"}], "]"}],
"]"
}
],
",",
RowBox[
{
"frees",
"=",
RowBox[
{
"{",
RowBox[
{
"Length",
"[",
RowBox[
{RowBox[{"IndicesOf", "[", "Free", "]"}], "[", "expr", "]"}
],
"]"
}
],
"}"
}
]
}
]
}
],
"}"
}
],
"&"
}
],
"@",
RowBox[
{
"Reap",
"[",
RowBox[
{
RowBox[{"ToCanonical", "[", "expr", "]"}],
",",
"\"NewIndices\""
}
],
"]"
}
]
}
]
}
],
"}"
}
],
",",
RowBox[
{
"arrange1",
"[",
RowBox[
{
"canonical",
",",
RowBox[
{
"{",
RowBox[
{
RowBox[{"Sort", "[", RowBox[{"{", "Rcase", "}"}], "]"}],
",",
"0"
}
],
"}"
}
],
",",
"metric"
}
],
"]"
}
]
}
],
"]"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
"(*",
" ",
RowBox[{"4.", " ", "Final", " ", "arrangements"}],
" ",
"*)"
}
],
"\[IndentingNewLine]",
"\[IndentingNewLine]",
RowBox[
{
"(*",
RowBox[
{
"Change",
" ",
RowBox[
{
"here",
":",
" ",
RowBox[
{
"Now",
" ",
"arrange",
" ",
"will",
" ",
"have",
" ",
"the",
" ",
"indices",
" ",
"of",
" ",
"the",
" ",
RowBox[{"expression", ".", " ", "This"}],
" ",
"will",
" ",
"be"
}
]
}
]
}
],
"*)"
}
]
}
]
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
" ",
RowBox[
{
"the",
" ",
"list",
" ",
"used",
" ",
"to",
" ",
"get",
" ",
"the",
" ",
"correct",
" ",
"permutation"
}
],
" ",
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{"arrange1", "[", RowBox[{"0", ",", "_", ",", "_"}], "]"}
],
":=",
"0"
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"arrange1",
"[",
RowBox[
{
RowBox[
{
"{",
RowBox[
{
"expr_",
",",
RowBox[
{"{", RowBox[{"sign_", ",", "perm_IndexList"}], "}"}
],
",",
"frees_"
}
],
"}"
}
],
",",
RowBox[
{"degs", ":", RowBox[{"{", RowBox[{"_", ",", "_"}], "}"}]}
],
",",
"metric_"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[{"RPerm", "[", "metric", "]"}],
"[",
RowBox[
{
"degs",
",",
"frees",
",",
RowBox[
{RowBox[{"IndicesOf", "[", "Free", "]"}], "[", "expr", "]"}
],
",",
RowBox[
{
"sign",
" ",
RowBox[
{
"TranslatePerm",
"[",
RowBox[
{
RowBox[
{
"PermutationFromTo",
"[",
RowBox[
{
RowBox[{"List", "@@", "perm"}],
",",
RowBox[
{"List", "@@", RowBox[{"IndexSort", "[", "perm", "]"}]}
]
}
],
"]"
}
],
",",
"Cycles"
}
],
"]"
}
]
}
]
}
],
"]"
}
]
}
]
}
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{"FromWeyl", "[", RowBox[{"expr_", ",", "cd_"}], "]"}
],
":=",
RowBox[
{
"expr",
"/.",
RowBox[
{
"{",
RowBox[
{
RowBox[
{
RowBox[{"Weyl", "[", "cd", "]"}],
"\[RuleDelayed]",
RowBox[{"Riemann", "[", "cd", "]"}]
}
],
",",
RowBox[
{
RowBox[{"TFRicci", "[", "cd", "]"}],
"\[RuleDelayed]",
RowBox[{"Ricci", "[", "cd", "]"}]
}
]
}
],
"}"
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"Need",
" ",
"to",
" ",
"adjust",
" ",
"this",
" ",
"see",
" ",
"Riemann",
" ",
"simplify",
" ",
"for",
" ",
"more",
" ",
"details"
}
],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{"RicciToRiemann", "[", RowBox[{"expr_", ",", "cd_"}], "]"}
],
":=",
RowBox[
{
"With",
"[",
RowBox[
{
RowBox[
{
"{",
RowBox[
{
RowBox[
{
"ricciscalar",
"=",
RowBox[{"RicciScalar", "[", "cd", "]"}]
}
],
",",
RowBox[{"ricci", "=", RowBox[{"Ricci", "[", "cd", "]"}]}],
",",
RowBox[
{"riemann", "=", RowBox[{"Riemann", "[", "cd", "]"}]}
],
",",
RowBox[
{
"vbundle",
"=",
RowBox[
{"First", "@", RowBox[{"VBundlesOfCovD", "[", "cd", "]"}]}
]
}
]
}
],
"}"
}
],
",",
RowBox[
{
"expr",
"/.",
RowBox[
{
"{",
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
RowBox[{"ricciscalar", "[", "]"}],
"\[RuleDelayed]",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[
{
"{",
RowBox[
{
RowBox[{"c", "=", RowBox[{"DummyIn", "@", "vbundle"}]}],
",",
RowBox[{"d", "=", RowBox[{"DummyIn", "@", "vbundle"}]}]
}
],
"}"
}
],
",",
RowBox[
{
"$RicciSign",
" ",
RowBox[
{
"riemann",
"[",
RowBox[
{
"c",
",",
"d",
",",
RowBox[{"-", "c"}],
",",
RowBox[{"-", "d"}]
}
],
"]"
}
]
}
]
}
],
"]"
}
]
}
],
",",
RowBox[
{
RowBox[{"ricci", "[", RowBox[{"a_", ",", "b_"}], "]"}],
"\[RuleDelayed]",
RowBox[
{
"Module",
"[",
RowBox[
{
RowBox[
{
"{",
RowBox[{"c", "=", RowBox[{"DummyIn", "@", "vbundle"}]}],
"}"
}
],
",",
RowBox[
{
"$RicciSign",
" ",
RowBox[
{
"riemann",
"[",
RowBox[{"a", ",", "c", ",", "b", ",", RowBox[{"-", "c"}]}],
"]"
}
]
}
]
}
],
"]"
}
]
}
]
}
],
"\[IndentingNewLine]",
"}"
}
]
}
]
}
],
"\[IndentingNewLine]",
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"DispatchRules",
"[",
RowBox[
{
"RInv",
",",
"2",
",",
"2",
",",
RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]
}
],
"]"
}
]
],
"Input"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
"\"Reading InvRules for step 2, rank \"",
"\[InvisibleSpace]",
"2",
"\[InvisibleSpace]",
"\" and case \"",
"\[InvisibleSpace]",
RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]
}
],
"Reading InvRules for step 2, rank "2" and case "{0, 0},
Editable -> False
]
],
"Print"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
TagBox["Dispatch", "SummaryHead"],
"[",
DynamicModuleBox[
{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
TemplateBox[
{
PaneSelectorBox[
{
False ->
GridBox[
{
{
PaneBox[
ButtonBox[
DynamicBox[
FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
],
ButtonFunction :> (Typeset`open$$ = True),
Appearance -> None,
BaseStyle -> { },
Evaluator -> Automatic,
Method -> "Preemptive"
],
Alignment -> {Center, Center},
ImageSize ->
Dynamic[
{
Automatic,
Times[
3.5,
Times[
CurrentValue["FontCapHeight"],
AbsoluteCurrentValue[Magnification]^(-1)
]
]
}
]
],
GraphicsBox[
{
GrayLevel[0.5],
PolygonBox[
{
{0.25, 0.5},
{0.05, 0.35},
{0.15, 0.35},
{0.35, 0.5},
{0.15, 0.65},
{0.05, 0.65}
}
],
PolygonBox[
{
{0.4, 0.5},
{0.2, 0.35},
{0.35, 0.35},
{0.55, 0.5},
{0.35, 0.65},
{0.2, 0.65}
}
],
PolygonBox[
{
{0.95, 0.5},
{0.55, 0.1},
{0.6, 0.35},
{0.4, 0.35},
{0.6, 0.5},
{0.4, 0.65},
{0.6, 0.65},
{0.55, 0.9}
}
]
},
PlotRange -> {{-0.05, 1.05}, {-0.05, 1.05}},
Background -> GrayLevel[0.93],
FrameStyle -> Directive[Thickness[Tiny], GrayLevel[0.7]],
Axes -> False,
AspectRatio -> 1,
ImageSize ->
Dynamic[
{
Automatic,
Times[
3.5,
Times[
CurrentValue["FontCapHeight"],
AbsoluteCurrentValue[Magnification]^(-1)
]
]
}
],
Frame -> True,
FrameTicks -> None,
FrameStyle ->
Directive[
Opacity[0.5],
Thickness[Tiny],
RGBColor[0.36842, 0.50678, 0.7098]
]
],
GridBox[
{
{
RowBox[
{
TagBox["\"Length: \"", "SummaryItemAnnotation"],
"\[InvisibleSpace]",
TagBox["1", "SummaryItem"]
}
]
}
},
GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
BaseStyle -> {
ShowStringCharacters -> False,
NumberMarks -> False,
PrintPrecision -> 3,
ShowSyntaxStyles -> False
}
]
}
},
GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
BaselinePosition -> {1, 1}
],
True ->
GridBox[
{
{
PaneBox[
ButtonBox[
DynamicBox[
FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
],
ButtonFunction :> (Typeset`open$$ = False),
Appearance -> None,
BaseStyle -> { },
Evaluator -> Automatic,
Method -> "Preemptive"
],
Alignment -> {Center, Center},
ImageSize ->
Dynamic[
{
Automatic,
Times[
3.5,
Times[
CurrentValue["FontCapHeight"],
AbsoluteCurrentValue[Magnification]^(-1)
]
]
}
]
],
GraphicsBox[
{
GrayLevel[0.5],
PolygonBox[
{
{0.25, 0.5},
{0.05, 0.35},
{0.15, 0.35},
{0.35, 0.5},
{0.15, 0.65},
{0.05, 0.65}
}
],
PolygonBox[
{
{0.4, 0.5},
{0.2, 0.35},
{0.35, 0.35},
{0.55, 0.5},
{0.35, 0.65},
{0.2, 0.65}
}
],
PolygonBox[
{
{0.95, 0.5},
{0.55, 0.1},
{0.6, 0.35},
{0.4, 0.35},
{0.6, 0.5},
{0.4, 0.65},
{0.6, 0.65},
{0.55, 0.9}
}
]
},
PlotRange -> {{-0.05, 1.05}, {-0.05, 1.05}},
Background -> GrayLevel[0.93],
FrameStyle -> Directive[Thickness[Tiny], GrayLevel[0.7]],
Axes -> False,
AspectRatio -> 1,
ImageSize ->
Dynamic[
{
Automatic,
Times[
3.5,
Times[
CurrentValue["FontCapHeight"],
AbsoluteCurrentValue[Magnification]^(-1)
]
]
}
],
Frame -> True,
FrameTicks -> None,
FrameStyle ->
Directive[
Opacity[0.5],
Thickness[Tiny],
RGBColor[0.36842, 0.50678, 0.7098]
]
],
GridBox[
{
{
RowBox[
{
TagBox["\"Length: \"", "SummaryItemAnnotation"],
"\[InvisibleSpace]",
TagBox["1", "SummaryItem"]
}
]
},
{
RowBox[
{
TagBox["\"Rules:\"", "SummaryItemAnnotation"],
"\[InvisibleSpace]",
TagBox["\"\"", "SummaryItem"]
}
]
},
{
TagBox[
TagBox[
GridBox[
{
{
RowBox[
{
SubscriptBox[
TemplateBox[
{"\"I\"", "\"2\""},
"Superscript",
SyntaxForm -> SuperscriptBox
],
"\"00,5\""
],
"\[Rule]",
FractionBox[
SubscriptBox[
TemplateBox[
{"\"I\"", "\"2\""},
"Superscript",
SyntaxForm -> SuperscriptBox
],
"\"00,4\""
],
"2"
]
}
]
}
},
GridBoxAlignment -> {"Columns" -> {{Left}}},
DefaultBaseStyle -> "Column",
GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
],
"Column"
],
"SummaryItem"
]
}
},
GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
BaseStyle -> {
ShowStringCharacters -> False,
NumberMarks -> False,
PrintPrecision -> 3,
ShowSyntaxStyles -> False
}
]
}
},
GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
BaselinePosition -> {1, 1}
]
},
Dynamic[Typeset`open$$],
ImageSize -> Automatic
]
},
"SummaryPanel"
],
DynamicModuleValues :> { }
],
"]"
}
],
Dispatch[
{RInv[2, {0, 0}, 5] -> Rational[1, 2]*RInv[2, {0, 0}, 4]}
],
Editable -> False,
SelectWithContents -> True,
Selectable -> False
]
],
"Output"
]
},
Open
]
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["PermToInv", "Subsection"],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
"Invariants",
" ",
"will",
" ",
"now",
" ",
"have",
" ",
"the",
" ",
"indexlist",
" ",
"of",
" ",
"the",
" ",
"expression",
" ",
"this",
" ",
"is",
" ",
"stored",
" ",
"in",
" ",
RowBox[
{"RInv", "[", RowBox[{"metric", ",", "indexlist"}], "]"}
],
" ",
"and",
" ",
"is",
" ",
"used",
" ",
"so",
" ",
"we",
" ",
"can",
" ",
"convert",
" ",
"from",
" ",
"invariant",
" ",
"to",
" ",
"perm",
" ",
"as",
" ",
"the",
" ",
"permutation",
" ",
"now",
" ",
"depends",
" ",
"on",
" ",
"the",
" ",
"sorted",
" ",
"indexlist",
" ",
"instead",
" ",
"of",
" ",
"a",
" ",
"fixed",
" ",
"list",
" ",
"in",
" ",
"Invar"
}
],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"PermToInv",
"[",
RowBox[
{
RowBox[{"RPerm", "[", "metric_", "]"}],
"[",
RowBox[
{
RowBox[{"{", RowBox[{"case_List", ",", "0"}], "}"}],
",",
RowBox[{"{", "Rank_", "}"}],
",",
"indexlist_",
",",
"perm_"
}
],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"(",
RowBox[
{
"perm",
"/.",
RowBox[
{
"DispatchPermToRInvRules",
"[",
RowBox[{"Rank", ",", "case"}],
"]"
}
]
}
],
")"
}
],
"/.",
RowBox[
{
"RInv",
"->",
RowBox[
{"RInv", "[", RowBox[{"metric", ",", "indexlist"}], "]"}
]
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"PermToInv",
"[",
RowBox[
{
RowBox[{"RPerm", "[", "metric_", "]"}],
"[",
RowBox[
{
RowBox[{"{", RowBox[{"case_List", ",", "1"}], "}"}],
",",
RowBox[{"{", "Rank_", "}"}],
",",
"indexlist_",
",",
"perm_"
}
],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"(",
RowBox[
{
"perm",
"/.",
RowBox[
{
"DispatchPermToDualRInvRules",
"[",
RowBox[{"Rank", ",", "case"}],
"]"
}
]
}
],
")"
}
],
"/.",
RowBox[
{
"RInv",
"->",
RowBox[
{"RInv", "[", RowBox[{"metric", ",", "indexlist"}], "]"}
]
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"PermToInv",
"[",
RowBox[
{
RowBox[{"WPerm", "[", "metric_", "]"}],
"[",
RowBox[
{
RowBox[{"{", RowBox[{"case_List", ",", "0"}], "}"}],
",",
RowBox[{"{", "Rank_", "}"}],
",",
"indexlist_",
",",
"perm_"
}
],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"perm",
"/.",
RowBox[
{
"DispatchPermToRInvRules",
"[",
RowBox[{"Rank", ",", "case"}],
"]"
}
]
}
],
"/.",
RowBox[
{
"RInv",
"\[Rule]",
RowBox[
{"WInv", "[", RowBox[{"metric", ",", "indexlist"}], "]"}
]
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"PermToInv",
"[",
RowBox[
{
RowBox[{"WPerm", "[", "metric_", "]"}],
"[",
RowBox[
{
RowBox[{"{", RowBox[{"case_List", ",", "1"}], "}"}],
",",
RowBox[{"{", "Rank_", "}"}],
",",
"indexlist_",
",",
"perm_"
}
],
"]"
}
],
"]"
}
],
":=",
RowBox[
{
RowBox[
{
"perm",
"/.",
RowBox[
{
"DispatchPermToDualRInvRules",
"[",
RowBox[{"Rank", ",", "case"}],
"]"
}
]
}
],
"/.",
RowBox[
{
"RInv",
"\[Rule]",
RowBox[
{
"DualRInv",
"[",
RowBox[{"metric", ",", "indexlist"}],
"]"
}
]
}
]
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[{"PermToInv", "[", "expr_", "]"}],
":=",
RowBox[
{
"expr",
"/.",
RowBox[
{
RowBox[
{
"perm",
":",
RowBox[
{
RowBox[
{
RowBox[{"(", RowBox[{"RPerm", "|", "WPerm"}], ")"}],
"[",
"_",
"]"
}
],
"[",
"__",
"]"
}
]
}
],
"\[RuleDelayed]",
RowBox[{"PermToInv", "[", "perm", "]"}]
}
]
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"SetNumberOfArguments",
"[",
RowBox[{"PermToInv", ",", "1"}],
"]"
}
],
";"
}
]
}
],
"Input"
],
Cell[
CellGroupData[
{
Cell[
BoxData[
RowBox[
{
"DispatchRules",
"[",
RowBox[
{
"RInv",
",",
"2",
",",
"2",
",",
RowBox[{"{", RowBox[{"0", ",", "0"}], "}"}]
}
],
"]"
}
]
],
"Input"
],
Cell[
BoxData[
InterpretationBox[
RowBox[
{
TagBox["Dispatch", "SummaryHead"],
"[",
DynamicModuleBox[
{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"},
TemplateBox[
{
PaneSelectorBox[
{
False ->
GridBox[
{
{
PaneBox[
ButtonBox[
DynamicBox[
FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]
],
ButtonFunction :> (Typeset`open$$ = True),
Appearance -> None,
BaseStyle -> { },
Evaluator -> Automatic,
Method -> "Preemptive"
],
Alignment -> {Center, Center},
ImageSize ->
Dynamic[
{
Automatic,
Times[
3.5,
Times[
CurrentValue["FontCapHeight"],
AbsoluteCurrentValue[Magnification]^(-1)
]
]
}
]
],
GraphicsBox[
{
GrayLevel[0.5],
PolygonBox[
{
{0.25, 0.5},
{0.05, 0.35},
{0.15, 0.35},
{0.35, 0.5},
{0.15, 0.65},
{0.05, 0.65}
}
],
PolygonBox[
{
{0.4, 0.5},
{0.2, 0.35},
{0.35, 0.35},
{0.55, 0.5},
{0.35, 0.65},
{0.2, 0.65}
}
],
PolygonBox[
{
{0.95, 0.5},
{0.55, 0.1},
{0.6, 0.35},
{0.4, 0.35},
{0.6, 0.5},
{0.4, 0.65},
{0.6, 0.65},
{0.55, 0.9}
}
]
},
PlotRange -> {{-0.05, 1.05}, {-0.05, 1.05}},
Background -> GrayLevel[0.93],
FrameStyle -> Directive[Thickness[Tiny], GrayLevel[0.7]],
Axes -> False,
AspectRatio -> 1,
ImageSize ->
Dynamic[
{
Automatic,
Times[
3.5,
Times[
CurrentValue["FontCapHeight"],
AbsoluteCurrentValue[Magnification]^(-1)
]
]
}
],
Frame -> True,
FrameTicks -> None,
FrameStyle ->
Directive[
Opacity[0.5],
Thickness[Tiny],
RGBColor[0.36842, 0.50678, 0.7098]
]
],
GridBox[
{
{
RowBox[
{
TagBox["\"Length: \"", "SummaryItemAnnotation"],
"\[InvisibleSpace]",
TagBox["1", "SummaryItem"]
}
]
}
},
GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
BaseStyle -> {
ShowStringCharacters -> False,
NumberMarks -> False,
PrintPrecision -> 3,
ShowSyntaxStyles -> False
}
]
}
},
GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
BaselinePosition -> {1, 1}
],
True ->
GridBox[
{
{
PaneBox[
ButtonBox[
DynamicBox[
FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]
],
ButtonFunction :> (Typeset`open$$ = False),
Appearance -> None,
BaseStyle -> { },
Evaluator -> Automatic,
Method -> "Preemptive"
],
Alignment -> {Center, Center},
ImageSize ->
Dynamic[
{
Automatic,
Times[
3.5,
Times[
CurrentValue["FontCapHeight"],
AbsoluteCurrentValue[Magnification]^(-1)
]
]
}
]
],
GraphicsBox[
{
GrayLevel[0.5],
PolygonBox[
{
{0.25, 0.5},
{0.05, 0.35},
{0.15, 0.35},
{0.35, 0.5},
{0.15, 0.65},
{0.05, 0.65}
}
],
PolygonBox[
{
{0.4, 0.5},
{0.2, 0.35},
{0.35, 0.35},
{0.55, 0.5},
{0.35, 0.65},
{0.2, 0.65}
}
],
PolygonBox[
{
{0.95, 0.5},
{0.55, 0.1},
{0.6, 0.35},
{0.4, 0.35},
{0.6, 0.5},
{0.4, 0.65},
{0.6, 0.65},
{0.55, 0.9}
}
]
},
PlotRange -> {{-0.05, 1.05}, {-0.05, 1.05}},
Background -> GrayLevel[0.93],
FrameStyle -> Directive[Thickness[Tiny], GrayLevel[0.7]],
Axes -> False,
AspectRatio -> 1,
ImageSize ->
Dynamic[
{
Automatic,
Times[
3.5,
Times[
CurrentValue["FontCapHeight"],
AbsoluteCurrentValue[Magnification]^(-1)
]
]
}
],
Frame -> True,
FrameTicks -> None,
FrameStyle ->
Directive[
Opacity[0.5],
Thickness[Tiny],
RGBColor[0.36842, 0.50678, 0.7098]
]
],
GridBox[
{
{
RowBox[
{
TagBox["\"Length: \"", "SummaryItemAnnotation"],
"\[InvisibleSpace]",
TagBox["1", "SummaryItem"]
}
]
},
{
RowBox[
{
TagBox["\"Rules:\"", "SummaryItemAnnotation"],
"\[InvisibleSpace]",
TagBox["\"\"", "SummaryItem"]
}
]
},
{
TagBox[
TagBox[
GridBox[
{
{
RowBox[
{
SubscriptBox[
TemplateBox[
{"\"I\"", "\"2\""},
"Superscript",
SyntaxForm -> SuperscriptBox
],
"\"00,5\""
],
"\[Rule]",
FractionBox[
SubscriptBox[
TemplateBox[
{"\"I\"", "\"2\""},
"Superscript",
SyntaxForm -> SuperscriptBox
],
"\"00,4\""
],
"2"
]
}
]
}
},
GridBoxAlignment -> {"Columns" -> {{Left}}},
DefaultBaseStyle -> "Column",
GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
],
"Column"
],
"SummaryItem"
]
}
},
GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
BaseStyle -> {
ShowStringCharacters -> False,
NumberMarks -> False,
PrintPrecision -> 3,
ShowSyntaxStyles -> False
}
]
}
},
GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
AutoDelete -> False,
GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
BaselinePosition -> {1, 1}
]
},
Dynamic[Typeset`open$$],
ImageSize -> Automatic
]
},
"SummaryPanel"
],
DynamicModuleValues :> { }
],
"]"
}
],
Dispatch[
{RInv[2, {0, 0}, 5] -> Rational[1, 2]*RInv[2, {0, 0}, 4]}
],
Editable -> False,
SelectWithContents -> True,
Selectable -> False
]
],
"Output"
]
},
Open
]
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["RiemannToInv", "Subsection"],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[{"RiemannToInv", "[", "expr_", "]"}],
":=",
RowBox[
{
"RiemannToInv",
"[",
RowBox[{"expr", ",", "$Metrics"}],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToInv",
"[",
RowBox[{"expr_", ",", "metrics_List"}],
"]"
}
],
":=",
RowBox[
{
"Fold",
"[",
RowBox[{"RiemannToInv", ",", "expr", ",", "metrics"}],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannToInv",
"[",
RowBox[
{"expr_", ",", RowBox[{"metric_Symbol", "?", "MetricQ"}]}
],
"]"
}
],
":=",
RowBox[
{
"PermToInv",
"[",
RowBox[
{
"RiemannToPerm",
"[",
RowBox[{"expr", ",", "metric"}],
"]"
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
{
RowBox[
{
RowBox[
{
RowBox[
{"RiemannToInv", "[", RowBox[{"expr_", ",", "x_"}], "]"}
],
":=",
RowBox[
{
"(",
RowBox[
{
RowBox[
{
"Message",
"[",
RowBox[
{
RowBox[{"RiemannToInv", "::", "unknown"}],
",",
"\"metric or list of metrics\"",
",",
"x"
}
],
"]"
}
],
";",
"expr"
}
],
")"
}
]
}
],
";"
}
],
"\[IndentingNewLine]",
RowBox[
{
RowBox[
{
"SetNumberOfArguments",
"[",
RowBox[
{
"RiemannToInv",
",",
RowBox[{"{", RowBox[{"1", ",", "2"}], "}"}]
}
],
"]"
}
],
";"
}
]
}
],
"Input"
]
},
Closed
]
],
Cell[
CellGroupData[
{
Cell["RiemannSimplify", "Subsection"],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[{"RiemannSimplify", "[", "expr_", "]"}],
":=",
RowBox[
{
"RiemannSimplify",
"[",
RowBox[
{
"expr",
",",
"$InvSimplifyLevel",
",",
"$CurvatureRelations",
",",
"$Metrics"
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
"(*",
RowBox[
{
RowBox[
{
RowBox[{"RiemannSimplify", "[", "expr_Plus", "]"}],
":=",
RowBox[
{
RowBox[{RowBox[{"RiemannSimplify", "[", "#", "]"}], "&"}],
"/@",
"expr"
}
]
}
],
";"
}
],
"*)"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannSimplify",
"[",
RowBox[{"expr_", ",", "step_Integer"}],
"]"
}
],
":=",
RowBox[
{
"RiemannSimplify",
"[",
RowBox[
{
"expr",
",",
"step",
",",
"$CurvatureRelations",
",",
"$Metrics"
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannSimplify",
"[",
RowBox[
{
"expr_",
",",
RowBox[
{
"cr",
":",
RowBox[{"(", RowBox[{"True", "|", "False"}], ")"}]
}
]
}
],
"]"
}
],
":=",
RowBox[
{
"RiemannSimplify",
"[",
RowBox[
{
"expr",
",",
"$InvSimplifyLevel",
",",
"cr",
",",
"$Metrics"
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannSimplify",
"[",
RowBox[
{
"expr_",
",",
RowBox[
{
"metric",
":",
RowBox[
{
"(",
RowBox[
{
RowBox[{"_Symbol", "?", "MetricQ"}],
"|",
RowBox[{"{", RowBox[{"__Symbol", "?", "MetricQ"}], "}"}]
}
],
")"
}
]
}
]
}
],
"]"
}
],
":=",
RowBox[
{
"RiemannSimplify",
"[",
RowBox[
{
"expr",
",",
"$InvSimplifyLevel",
",",
"$CurvatureRelations",
",",
"metric"
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
RowBox[
{
"RiemannSimplify",
"[",
RowBox[
{
"expr_",
",",
"step_Integer",
",",
RowBox[
{
"cr",
":",
RowBox[{"(", RowBox[{"True", "|", "False"}], ")"}]
}
],
",",
"metric_"
}
],
"]"
}
],
":=",
RowBox[
{
"InvToRiemann",
"[",
RowBox[
{
RowBox[
{
"InvSimplify",
"[",
RowBox[
{
RowBox[
{"RiemannToInv", "[", RowBox[{"expr", ",", "metric"}], "]"}
],
",",
"step"
}
],
"]"
}
],
",",
"cr"
}
],
"]"
}
]
}
],
";"
}
]
],
"Input"
],
Cell[
BoxData[
RowBox[
{
RowBox[
{
"SetNumberOfArguments",
"[",
RowBox[
{
"RiemannSimplify",
",",
RowBox[{"{", RowBox[{"1", ",", "3"}], "}"}]
}
],
"]"
}
],
";"
}
]
],
"Input"
]
},
Closed
]
]
},
Open
]
]
},
Open
]
]
},
DockedCells -> { },
FrontEndVersion -> "13.3 for Mac OS X x86 (64-bit) (June 3, 2023)",
StyleDefinitions -> "Default.nb",
ExpressionUUID -> "5077c983-c36a-4700-a2b9-6d866aa32bce"
]